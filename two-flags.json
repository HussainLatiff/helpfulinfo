{
    "engineConfig": {
        "defaultFlushInterval": "500",
        "datasourceConfigurations": [
            {
                "kind": "GRAPHQL",
                "rootNodes": [
                    {
                        "typeName": "Query",
                        "fieldNames": [
                            "FederateBase1"
                        ]
                    }
                ],
                "childNodes": [
                    {
                        "typeName": "FederateBase1Response",
                        "fieldNames": [
                            "id"
                        ]
                    }
                ],
                "overrideFieldPathFromAlias": true,
                "customGraphql": {
                    "fetch": {
                        "url": {
                            "staticVariableContent": "http://localhost:3002/graphql"
                        },
                        "method": "POST",
                        "body": {},
                        "baseUrl": {},
                        "path": {}
                    },
                    "subscription": {
                        "enabled": true,
                        "url": {
                            "staticVariableContent": "http://localhost:3002/graphql"
                        },
                        "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
                        "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
                    },
                    "federation": {
                        "enabled": true,
                        "serviceSdl": "\nschema {\n  query: Query\n}\n\n# Root Query type\ntype Query {\n  FederateBase1: FederateBase1Response!\n}\n\n# Type for the response that contains only an ID\ntype FederateBase1Response {\n  id: ID!\n}\n"
                    },
                    "upstreamSchema": {
                        "key": "9cabd78fd86a5da0cd7db5493e98fdaa16a277ae"
                    }
                },
                "requestTimeoutSeconds": "10",
                "id": "0413bfee-ffd6-4d53-a23a-344109cbb11a"
            }
        ],
        "graphqlSchema": "schema {\n  query: Query\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype FederateBase1Response {\n  id: ID!\n}\n\ntype Query {\n  FederateBase1: FederateBase1Response!\n}\n\nscalar openfed__FieldSet",

        "stringStorage": {
            "9cabd78fd86a5da0cd7db5493e98fdaa16a277ae": "schema {\n  query: Query\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype FederateBase1Response {\n  id: ID!\n}\n\ntype Query {\n  FederateBase1: FederateBase1Response!\n}\n\nscalar openfed__FieldSet"
        }
    },
    "version": "b5de725b-9def-4ea4-9f17-e845448c895d",
    "subgraphs": [
        {
            "id": "0413bfee-ffd6-4d53-a23a-344109cbb11a",
            "name": "base1",
            "routingUrl": "http://localhost:3002/graphql"
        }
    ],
    "featureFlagConfigs": {
        "configByFeatureFlagName": {
            "new-flag": {
                "engineConfig": {
                    "defaultFlushInterval": "500",
                    "datasourceConfigurations": [
                        {
                            "kind": "GRAPHQL",
                            "rootNodes": [
                                {
                                    "typeName": "Query",
                                    "fieldNames": [
                                        "continents",
                                        "continent",
                                        "countries",
                                        "country",
                                        "languages",
                                        "language"
                                    ]
                                }
                            ],
                            "childNodes": [
                                {
                                    "typeName": "Continent",
                                    "fieldNames": [
                                        "code",
                                        "name",
                                        "countries"
                                    ]
                                },
                                {
                                    "typeName": "Country",
                                    "fieldNames": [
                                        "code",
                                        "name",
                                        "native",
                                        "phone",
                                        "continent",
                                        "currency",
                                        "languages",
                                        "emoji",
                                        "emojiU",
                                        "states"
                                    ]
                                },
                                {
                                    "typeName": "Language",
                                    "fieldNames": [
                                        "code",
                                        "name",
                                        "native",
                                        "rtl"
                                    ]
                                },
                                {
                                    "typeName": "State",
                                    "fieldNames": [
                                        "code",
                                        "name",
                                        "country"
                                    ]
                                }
                            ],
                            "overrideFieldPathFromAlias": true,
                            "customGraphql": {
                                "fetch": {
                                    "url": {
                                        "staticVariableContent": "https://countries.trevorblades.com/graphql"
                                    },
                                    "method": "POST",
                                    "body": {},
                                    "baseUrl": {},
                                    "path": {}
                                },
                                "subscription": {
                                    "enabled": true,
                                    "url": {
                                        "staticVariableContent": "https://countries.trevorblades.com/graphql"
                                    },
                                    "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
                                    "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
                                },
                                "federation": {
                                    "enabled": true,
                                    "serviceSdl": "\"\"\"\"\"\"\ndirective @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE\n\n\"\"\"\"\"\"\ntype Query {\n  \"\"\"\"\"\"\n  continents: [Continent]\n  \"\"\"\"\"\"\n  continent(code: String): Continent\n  \"\"\"\"\"\"\n  countries: [Country]\n  \"\"\"\"\"\"\n  country(code: String): Country\n  \"\"\"\"\"\"\n  languages: [Language]\n  \"\"\"\"\"\"\n  language(code: String): Language\n}\n\n\"\"\"\"\"\"\ntype Continent {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  countries: [Country]\n}\n\n\"\"\"\"\"\"\ntype Country {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  native: String\n  \"\"\"\"\"\"\n  phone: String\n  \"\"\"\"\"\"\n  continent: Continent\n  \"\"\"\"\"\"\n  currency: String\n  \"\"\"\"\"\"\n  languages: [Language]\n  \"\"\"\"\"\"\n  emoji: String\n  \"\"\"\"\"\"\n  emojiU: String\n  \"\"\"\"\"\"\n  states: [State]\n}\n\n\"\"\"\"\"\"\ntype Language {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  native: String\n  \"\"\"\"\"\"\n  rtl: Int\n}\n\n\"\"\"\"\"\"\ntype State {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  country: Country\n}\n\n\"\"\"\"\"\"\nenum CacheControlScope {\n  \"\"\"\"\"\"\n  PUBLIC\n  \"\"\"\"\"\"\n  PRIVATE\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n"
                                },
                                "upstreamSchema": {
                                    "key": "ddab1edac7a647cc2ed7d7b1c17dd658dea9e10b"
                                }
                            },
                            "requestTimeoutSeconds": "10",
                            "id": "c944b5cd-0b58-4a72-a9ba-7e46715d164b"
                        },
                        {
                            "kind": "GRAPHQL",
                            "rootNodes": [
                                {
                                    "typeName": "Query",
                                    "fieldNames": [
                                        "character",
                                        "characters",
                                        "charactersByIds",
                                        "episode",
                                        "episodes",
                                        "episodesByIds",
                                        "location",
                                        "locations",
                                        "locationsByIds"
                                    ]
                                }
                            ],
                            "childNodes": [
                                {
                                    "typeName": "Character",
                                    "fieldNames": [
                                        "created",
                                        "episode",
                                        "gender",
                                        "id",
                                        "image",
                                        "location",
                                        "name",
                                        "origin",
                                        "species",
                                        "status",
                                        "type"
                                    ]
                                },
                                {
                                    "typeName": "Characters",
                                    "fieldNames": [
                                        "info",
                                        "results"
                                    ]
                                },
                                {
                                    "typeName": "Episode",
                                    "fieldNames": [
                                        "air_date",
                                        "characters",
                                        "created",
                                        "episode",
                                        "id",
                                        "name"
                                    ]
                                },
                                {
                                    "typeName": "Episodes",
                                    "fieldNames": [
                                        "info",
                                        "results"
                                    ]
                                },
                                {
                                    "typeName": "Info",
                                    "fieldNames": [
                                        "count",
                                        "next",
                                        "pages",
                                        "prev"
                                    ]
                                },
                                {
                                    "typeName": "Location",
                                    "fieldNames": [
                                        "created",
                                        "dimension",
                                        "id",
                                        "name",
                                        "residents",
                                        "type"
                                    ]
                                },
                                {
                                    "typeName": "Locations",
                                    "fieldNames": [
                                        "info",
                                        "results"
                                    ]
                                }
                            ],
                            "overrideFieldPathFromAlias": true,
                            "customGraphql": {
                                "fetch": {
                                    "url": {
                                        "staticVariableContent": "https://rickandmortyapi.com/graphql"
                                    },
                                    "method": "POST",
                                    "body": {},
                                    "baseUrl": {},
                                    "path": {}
                                },
                                "subscription": {
                                    "enabled": true,
                                    "url": {
                                        "staticVariableContent": "https://rickandmortyapi.com/graphql"
                                    },
                                    "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
                                    "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
                                },
                                "federation": {
                                    "enabled": true,
                                    "serviceSdl": "\"\"\"\"\"\"\ndirective @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE\n\n\"\"\"\"\"\"\nenum CacheControlScope {\n  \"\"\"\"\"\"\n  PRIVATE\n\n  \"\"\"\"\"\"\n  PUBLIC\n}\n\n\"\"\"\"\"\"\ntype Character {\n  \"\"\"Time at which the character was created in the database.\"\"\"\n  created: String\n\n  \"\"\"Episodes in which this character appeared.\"\"\"\n  episode: [Episode]!\n\n  \"\"\"\n  The gender of the character ('Female', 'Male', 'Genderless' or 'unknown').\n  \"\"\"\n  gender: String\n\n  \"\"\"The id of the character.\"\"\"\n  id: ID\n\n  \"\"\"\n  Link to the character's image.\n  All images are 300x300px and most are medium shots or portraits since they are intended to be used as avatars.\n  \"\"\"\n  image: String\n\n  \"\"\"The character's last known location\"\"\"\n  location: Location\n\n  \"\"\"The name of the character.\"\"\"\n  name: String\n\n  \"\"\"The character's origin location\"\"\"\n  origin: Location\n\n  \"\"\"The species of the character.\"\"\"\n  species: String\n\n  \"\"\"The status of the character ('Alive', 'Dead' or 'unknown').\"\"\"\n  status: String\n\n  \"\"\"The type or subspecies of the character.\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Characters {\n  \"\"\"\"\"\"\n  info: Info\n\n  \"\"\"\"\"\"\n  results: [Character]\n}\n\n\"\"\"\"\"\"\ntype Episode {\n  \"\"\"The air date of the episode.\"\"\"\n  air_date: String\n\n  \"\"\"List of characters who have been seen in the episode.\"\"\"\n  characters: [Character]!\n\n  \"\"\"Time at which the episode was created in the database.\"\"\"\n  created: String\n\n  \"\"\"The code of the episode.\"\"\"\n  episode: String\n\n  \"\"\"The id of the episode.\"\"\"\n  id: ID\n\n  \"\"\"The name of the episode.\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ntype Episodes {\n  \"\"\"\"\"\"\n  info: Info\n\n  \"\"\"\"\"\"\n  results: [Episode]\n}\n\n\"\"\"\"\"\"\ninput FilterCharacter {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  species: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  gender: String\n}\n\n\"\"\"\"\"\"\ninput FilterEpisode {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  episode: String\n}\n\n\"\"\"\"\"\"\ninput FilterLocation {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  dimension: String\n}\n\n\"\"\"\"\"\"\ntype Info {\n  \"\"\"The length of the response.\"\"\"\n  count: Int\n\n  \"\"\"Number of the next page (if it exists)\"\"\"\n  next: Int\n\n  \"\"\"The amount of pages.\"\"\"\n  pages: Int\n\n  \"\"\"Number of the previous page (if it exists)\"\"\"\n  prev: Int\n}\n\n\"\"\"\"\"\"\ntype Location {\n  \"\"\"Time at which the location was created in the database.\"\"\"\n  created: String\n\n  \"\"\"The dimension in which the location is located.\"\"\"\n  dimension: String\n\n  \"\"\"The id of the location.\"\"\"\n  id: ID\n\n  \"\"\"The name of the location.\"\"\"\n  name: String\n\n  \"\"\"List of characters who have been last seen in the location.\"\"\"\n  residents: [Character]!\n\n  \"\"\"The type of the location.\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Locations {\n  \"\"\"\"\"\"\n  info: Info\n\n  \"\"\"\"\"\"\n  results: [Location]\n}\n\n\"\"\"\"\"\"\ntype Query {\n  \"\"\"Get a specific character by ID\"\"\"\n  character(id: ID!): Character\n\n  \"\"\"Get the list of all characters\"\"\"\n  characters(filter: FilterCharacter, page: Int): Characters\n\n  \"\"\"Get a list of characters selected by ids\"\"\"\n  charactersByIds(ids: [ID!]!): [Character]\n\n  \"\"\"Get a specific episode by ID\"\"\"\n  episode(id: ID!): Episode\n\n  \"\"\"Get the list of all episodes\"\"\"\n  episodes(filter: FilterEpisode, page: Int): Episodes\n\n  \"\"\"Get a list of episodes selected by ids\"\"\"\n  episodesByIds(ids: [ID!]!): [Episode]\n\n  \"\"\"Get a specific locations by ID\"\"\"\n  location(id: ID!): Location\n\n  \"\"\"Get the list of all locations\"\"\"\n  locations(filter: FilterLocation, page: Int): Locations\n\n  \"\"\"Get a list of locations selected by ids\"\"\"\n  locationsByIds(ids: [ID!]!): [Location]\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n"
                                },
                                "upstreamSchema": {
                                    "key": "9128383dfb53f7dc0d021be2dac2ea7021707545"
                                }
                            },
                            "requestTimeoutSeconds": "10",
                            "id": "78d9618c-d48d-4ec1-be5c-c0251121f9ee"
                        }
                    ],
                    "fieldConfigurations": [
                        {
                            "typeName": "Query",
                            "fieldName": "continent",
                            "argumentsConfiguration": [
                                {
                                    "name": "code",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "country",
                            "argumentsConfiguration": [
                                {
                                    "name": "code",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "language",
                            "argumentsConfiguration": [
                                {
                                    "name": "code",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "character",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "characters",
                            "argumentsConfiguration": [
                                {
                                    "name": "filter",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "page",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "charactersByIds",
                            "argumentsConfiguration": [
                                {
                                    "name": "ids",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "episode",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "episodes",
                            "argumentsConfiguration": [
                                {
                                    "name": "filter",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "page",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "episodesByIds",
                            "argumentsConfiguration": [
                                {
                                    "name": "ids",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "location",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "locations",
                            "argumentsConfiguration": [
                                {
                                    "name": "filter",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "page",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "locationsByIds",
                            "argumentsConfiguration": [
                                {
                                    "name": "ids",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        }
                    ],
                    "graphqlSchema": "schema {\n  query: Query\n}\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\n\"\"\"\"\"\"\ntype Query {\n  \"\"\"\"\"\"\n  continents: [Continent]\n  \"\"\"\"\"\"\n  continent(code: String): Continent\n  \"\"\"\"\"\"\n  countries: [Country]\n  \"\"\"\"\"\"\n  country(code: String): Country\n  \"\"\"\"\"\"\n  languages: [Language]\n  \"\"\"\"\"\"\n  language(code: String): Language\n  \"\"\"Get a specific character by ID\"\"\"\n  character(id: ID!): Character\n  \"\"\"Get the list of all characters\"\"\"\n  characters(filter: FilterCharacter, page: Int): Characters\n  \"\"\"Get a list of characters selected by ids\"\"\"\n  charactersByIds(ids: [ID!]!): [Character]\n  \"\"\"Get a specific episode by ID\"\"\"\n  episode(id: ID!): Episode\n  \"\"\"Get the list of all episodes\"\"\"\n  episodes(filter: FilterEpisode, page: Int): Episodes\n  \"\"\"Get a list of episodes selected by ids\"\"\"\n  episodesByIds(ids: [ID!]!): [Episode]\n  \"\"\"Get a specific locations by ID\"\"\"\n  location(id: ID!): Location\n  \"\"\"Get the list of all locations\"\"\"\n  locations(filter: FilterLocation, page: Int): Locations\n  \"\"\"Get a list of locations selected by ids\"\"\"\n  locationsByIds(ids: [ID!]!): [Location]\n}\n\n\"\"\"\"\"\"\ntype Continent {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  countries: [Country]\n}\n\n\"\"\"\"\"\"\ntype Country {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  native: String\n  \"\"\"\"\"\"\n  phone: String\n  \"\"\"\"\"\"\n  continent: Continent\n  \"\"\"\"\"\"\n  currency: String\n  \"\"\"\"\"\"\n  languages: [Language]\n  \"\"\"\"\"\"\n  emoji: String\n  \"\"\"\"\"\"\n  emojiU: String\n  \"\"\"\"\"\"\n  states: [State]\n}\n\n\"\"\"\"\"\"\ntype Language {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  native: String\n  \"\"\"\"\"\"\n  rtl: Int\n}\n\n\"\"\"\"\"\"\ntype State {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  country: Country\n}\n\n\"\"\"\"\"\"\nenum CacheControlScope {\n  \"\"\"\"\"\"\n  PUBLIC\n  \"\"\"\"\"\"\n  PRIVATE\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\n\"\"\"\"\"\"\ntype Character {\n  \"\"\"Time at which the character was created in the database.\"\"\"\n  created: String\n  \"\"\"Episodes in which this character appeared.\"\"\"\n  episode: [Episode]!\n  \"\"\"\n  The gender of the character ('Female', 'Male', 'Genderless' or 'unknown').\n  \"\"\"\n  gender: String\n  \"\"\"The id of the character.\"\"\"\n  id: ID\n  \"\"\"\n  Link to the character's image.\n  All images are 300x300px and most are medium shots or portraits since they are intended to be used as avatars.\n  \"\"\"\n  image: String\n  \"\"\"The character's last known location\"\"\"\n  location: Location\n  \"\"\"The name of the character.\"\"\"\n  name: String\n  \"\"\"The character's origin location\"\"\"\n  origin: Location\n  \"\"\"The species of the character.\"\"\"\n  species: String\n  \"\"\"The status of the character ('Alive', 'Dead' or 'unknown').\"\"\"\n  status: String\n  \"\"\"The type or subspecies of the character.\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Characters {\n  \"\"\"\"\"\"\n  info: Info\n  \"\"\"\"\"\"\n  results: [Character]\n}\n\n\"\"\"\"\"\"\ntype Episode {\n  \"\"\"The air date of the episode.\"\"\"\n  air_date: String\n  \"\"\"List of characters who have been seen in the episode.\"\"\"\n  characters: [Character]!\n  \"\"\"Time at which the episode was created in the database.\"\"\"\n  created: String\n  \"\"\"The code of the episode.\"\"\"\n  episode: String\n  \"\"\"The id of the episode.\"\"\"\n  id: ID\n  \"\"\"The name of the episode.\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ntype Episodes {\n  \"\"\"\"\"\"\n  info: Info\n  \"\"\"\"\"\"\n  results: [Episode]\n}\n\n\"\"\"\"\"\"\ninput FilterCharacter {\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  species: String\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  gender: String\n}\n\n\"\"\"\"\"\"\ninput FilterEpisode {\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  episode: String\n}\n\n\"\"\"\"\"\"\ninput FilterLocation {\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  dimension: String\n}\n\n\"\"\"\"\"\"\ntype Info {\n  \"\"\"The length of the response.\"\"\"\n  count: Int\n  \"\"\"Number of the next page (if it exists)\"\"\"\n  next: Int\n  \"\"\"The amount of pages.\"\"\"\n  pages: Int\n  \"\"\"Number of the previous page (if it exists)\"\"\"\n  prev: Int\n}\n\n\"\"\"\"\"\"\ntype Location {\n  \"\"\"Time at which the location was created in the database.\"\"\"\n  created: String\n  \"\"\"The dimension in which the location is located.\"\"\"\n  dimension: String\n  \"\"\"The id of the location.\"\"\"\n  id: ID\n  \"\"\"The name of the location.\"\"\"\n  name: String\n  \"\"\"List of characters who have been last seen in the location.\"\"\"\n  residents: [Character]!\n  \"\"\"The type of the location.\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Locations {\n  \"\"\"\"\"\"\n  info: Info\n  \"\"\"\"\"\"\n  results: [Location]\n}",
                    "stringStorage": {
                        "ddab1edac7a647cc2ed7d7b1c17dd658dea9e10b": "schema {\n  query: Query\n}\n\n\"\"\"\"\"\"\ndirective @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | INTERFACE | OBJECT\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\n\"\"\"\"\"\"\nenum CacheControlScope {\n  \"\"\"\"\"\"\n  PRIVATE\n  \"\"\"\"\"\"\n  PUBLIC\n}\n\n\"\"\"\"\"\"\ntype Continent {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  countries: [Country]\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ntype Country {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  continent: Continent\n  \"\"\"\"\"\"\n  currency: String\n  \"\"\"\"\"\"\n  emoji: String\n  \"\"\"\"\"\"\n  emojiU: String\n  \"\"\"\"\"\"\n  languages: [Language]\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  native: String\n  \"\"\"\"\"\"\n  phone: String\n  \"\"\"\"\"\"\n  states: [State]\n}\n\n\"\"\"\"\"\"\ntype Language {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  native: String\n  \"\"\"\"\"\"\n  rtl: Int\n}\n\n\"\"\"\"\"\"\ntype Query {\n  \"\"\"\"\"\"\n  continent(code: String): Continent\n  \"\"\"\"\"\"\n  continents: [Continent]\n  \"\"\"\"\"\"\n  countries: [Country]\n  \"\"\"\"\"\"\n  country(code: String): Country\n  \"\"\"\"\"\"\n  language(code: String): Language\n  \"\"\"\"\"\"\n  languages: [Language]\n}\n\n\"\"\"\"\"\"\ntype State {\n  \"\"\"\"\"\"\n  code: String\n  \"\"\"\"\"\"\n  country: Country\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\nscalar openfed__FieldSet",
                        "9128383dfb53f7dc0d021be2dac2ea7021707545": "schema {\n  query: Query\n}\n\n\"\"\"\"\"\"\ndirective @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | INTERFACE | OBJECT\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\n\"\"\"\"\"\"\nenum CacheControlScope {\n  \"\"\"\"\"\"\n  PRIVATE\n  \"\"\"\"\"\"\n  PUBLIC\n}\n\n\"\"\"\"\"\"\ntype Character {\n  \"\"\"Time at which the character was created in the database.\"\"\"\n  created: String\n  \"\"\"Episodes in which this character appeared.\"\"\"\n  episode: [Episode]!\n  \"\"\"\n  The gender of the character ('Female', 'Male', 'Genderless' or 'unknown').\n  \"\"\"\n  gender: String\n  \"\"\"The id of the character.\"\"\"\n  id: ID\n  \"\"\"\n  Link to the character's image.\n  All images are 300x300px and most are medium shots or portraits since they are intended to be used as avatars.\n  \"\"\"\n  image: String\n  \"\"\"The character's last known location\"\"\"\n  location: Location\n  \"\"\"The name of the character.\"\"\"\n  name: String\n  \"\"\"The character's origin location\"\"\"\n  origin: Location\n  \"\"\"The species of the character.\"\"\"\n  species: String\n  \"\"\"The status of the character ('Alive', 'Dead' or 'unknown').\"\"\"\n  status: String\n  \"\"\"The type or subspecies of the character.\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Characters {\n  \"\"\"\"\"\"\n  info: Info\n  \"\"\"\"\"\"\n  results: [Character]\n}\n\n\"\"\"\"\"\"\ntype Episode {\n  \"\"\"The air date of the episode.\"\"\"\n  air_date: String\n  \"\"\"List of characters who have been seen in the episode.\"\"\"\n  characters: [Character]!\n  \"\"\"Time at which the episode was created in the database.\"\"\"\n  created: String\n  \"\"\"The code of the episode.\"\"\"\n  episode: String\n  \"\"\"The id of the episode.\"\"\"\n  id: ID\n  \"\"\"The name of the episode.\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ntype Episodes {\n  \"\"\"\"\"\"\n  info: Info\n  \"\"\"\"\"\"\n  results: [Episode]\n}\n\n\"\"\"\"\"\"\ninput FilterCharacter {\n  \"\"\"\"\"\"\n  gender: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  species: String\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ninput FilterEpisode {\n  \"\"\"\"\"\"\n  episode: String\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ninput FilterLocation {\n  \"\"\"\"\"\"\n  dimension: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Info {\n  \"\"\"The length of the response.\"\"\"\n  count: Int\n  \"\"\"Number of the next page (if it exists)\"\"\"\n  next: Int\n  \"\"\"The amount of pages.\"\"\"\n  pages: Int\n  \"\"\"Number of the previous page (if it exists)\"\"\"\n  prev: Int\n}\n\n\"\"\"\"\"\"\ntype Location {\n  \"\"\"Time at which the location was created in the database.\"\"\"\n  created: String\n  \"\"\"The dimension in which the location is located.\"\"\"\n  dimension: String\n  \"\"\"The id of the location.\"\"\"\n  id: ID\n  \"\"\"The name of the location.\"\"\"\n  name: String\n  \"\"\"List of characters who have been last seen in the location.\"\"\"\n  residents: [Character]!\n  \"\"\"The type of the location.\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Locations {\n  \"\"\"\"\"\"\n  info: Info\n  \"\"\"\"\"\"\n  results: [Location]\n}\n\n\"\"\"\"\"\"\ntype Query {\n  \"\"\"Get a specific character by ID\"\"\"\n  character(id: ID!): Character\n  \"\"\"Get the list of all characters\"\"\"\n  characters(filter: FilterCharacter, page: Int): Characters\n  \"\"\"Get a list of characters selected by ids\"\"\"\n  charactersByIds(ids: [ID!]!): [Character]\n  \"\"\"Get a specific episode by ID\"\"\"\n  episode(id: ID!): Episode\n  \"\"\"Get the list of all episodes\"\"\"\n  episodes(filter: FilterEpisode, page: Int): Episodes\n  \"\"\"Get a list of episodes selected by ids\"\"\"\n  episodesByIds(ids: [ID!]!): [Episode]\n  \"\"\"Get a specific locations by ID\"\"\"\n  location(id: ID!): Location\n  \"\"\"Get the list of all locations\"\"\"\n  locations(filter: FilterLocation, page: Int): Locations\n  \"\"\"Get a list of locations selected by ids\"\"\"\n  locationsByIds(ids: [ID!]!): [Location]\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\nscalar openfed__FieldSet"
                    }
                },
                "version": "356781d4-4549-4eff-8e20-c733c5eaf0f1",
                "subgraphs": [
                    {
                        "id": "c944b5cd-0b58-4a72-a9ba-7e46715d164b",
                        "name": "countries",
                        "routingUrl": "https://countries.trevorblades.com/graphql"
                    },
                    {
                        "id": "78d9618c-d48d-4ec1-be5c-c0251121f9ee",
                        "name": "featgraph",
                        "routingUrl": "https://rickandmortyapi.com/graphql"
                    }
                ]
            },
            "second-flageded": {
                "engineConfig": {
                    "defaultFlushInterval": "500",
                    "datasourceConfigurations": [
                        {
                            "kind": "GRAPHQL",
                            "rootNodes": [
                                {
                                    "typeName": "Mutation",
                                    "fieldNames": [
                                        "delete_users",
                                        "insert_users",
                                        "update_users"
                                    ]
                                },
                                {
                                    "typeName": "Query",
                                    "fieldNames": [
                                        "capsule",
                                        "capsules",
                                        "capsulesPast",
                                        "capsulesUpcoming",
                                        "company",
                                        "core",
                                        "cores",
                                        "coresPast",
                                        "coresUpcoming",
                                        "dragon",
                                        "dragons",
                                        "histories",
                                        "historiesResult",
                                        "history",
                                        "landpad",
                                        "landpads",
                                        "launch",
                                        "launchLatest",
                                        "launchNext",
                                        "launches",
                                        "launchesPast",
                                        "launchesPastResult",
                                        "launchesUpcoming",
                                        "launchpad",
                                        "launchpads",
                                        "mission",
                                        "missions",
                                        "missionsResult",
                                        "payload",
                                        "payloads",
                                        "roadster",
                                        "rocket",
                                        "rockets",
                                        "rocketsResult",
                                        "ship",
                                        "ships",
                                        "shipsResult",
                                        "users",
                                        "users_aggregate",
                                        "users_by_pk"
                                    ]
                                },
                                {
                                    "typeName": "Subscription",
                                    "fieldNames": [
                                        "users",
                                        "users_aggregate",
                                        "users_by_pk"
                                    ]
                                }
                            ],
                            "childNodes": [
                                {
                                    "typeName": "Address",
                                    "fieldNames": [
                                        "address",
                                        "city",
                                        "state"
                                    ]
                                },
                                {
                                    "typeName": "Capsule",
                                    "fieldNames": [
                                        "dragon",
                                        "id",
                                        "landings",
                                        "missions",
                                        "original_launch",
                                        "reuse_count",
                                        "status",
                                        "type"
                                    ]
                                },
                                {
                                    "typeName": "CapsuleMission",
                                    "fieldNames": [
                                        "flight",
                                        "name"
                                    ]
                                },
                                {
                                    "typeName": "Core",
                                    "fieldNames": [
                                        "asds_attempts",
                                        "asds_landings",
                                        "block",
                                        "id",
                                        "missions",
                                        "original_launch",
                                        "reuse_count",
                                        "rtls_attempts",
                                        "rtls_landings",
                                        "status",
                                        "water_landing"
                                    ]
                                },
                                {
                                    "typeName": "CoreMission",
                                    "fieldNames": [
                                        "flight",
                                        "name"
                                    ]
                                },
                                {
                                    "typeName": "Distance",
                                    "fieldNames": [
                                        "feet",
                                        "meters"
                                    ]
                                },
                                {
                                    "typeName": "Dragon",
                                    "fieldNames": [
                                        "active",
                                        "crew_capacity",
                                        "description",
                                        "diameter",
                                        "dry_mass_kg",
                                        "dry_mass_lb",
                                        "first_flight",
                                        "heat_shield",
                                        "height_w_trunk",
                                        "id",
                                        "launch_payload_mass",
                                        "launch_payload_vol",
                                        "name",
                                        "orbit_duration_yr",
                                        "pressurized_capsule",
                                        "return_payload_mass",
                                        "return_payload_vol",
                                        "sidewall_angle_deg",
                                        "thrusters",
                                        "trunk",
                                        "type",
                                        "wikipedia"
                                    ]
                                },
                                {
                                    "typeName": "DragonHeatShield",
                                    "fieldNames": [
                                        "dev_partner",
                                        "material",
                                        "size_meters",
                                        "temp_degrees"
                                    ]
                                },
                                {
                                    "typeName": "DragonPressurizedCapsule",
                                    "fieldNames": [
                                        "payload_volume"
                                    ]
                                },
                                {
                                    "typeName": "DragonThrust",
                                    "fieldNames": [
                                        "amount",
                                        "fuel_1",
                                        "fuel_2",
                                        "pods",
                                        "thrust",
                                        "type"
                                    ]
                                },
                                {
                                    "typeName": "DragonTrunk",
                                    "fieldNames": [
                                        "cargo",
                                        "trunk_volume"
                                    ]
                                },
                                {
                                    "typeName": "DragonTrunkCargo",
                                    "fieldNames": [
                                        "solar_array",
                                        "unpressurized_cargo"
                                    ]
                                },
                                {
                                    "typeName": "Force",
                                    "fieldNames": [
                                        "kN",
                                        "lbf"
                                    ]
                                },
                                {
                                    "typeName": "HistoriesResult",
                                    "fieldNames": [
                                        "data",
                                        "result"
                                    ]
                                },
                                {
                                    "typeName": "History",
                                    "fieldNames": [
                                        "details",
                                        "event_date_unix",
                                        "event_date_utc",
                                        "flight",
                                        "id",
                                        "links",
                                        "title"
                                    ]
                                },
                                {
                                    "typeName": "Info",
                                    "fieldNames": [
                                        "ceo",
                                        "coo",
                                        "cto",
                                        "cto_propulsion",
                                        "employees",
                                        "founded",
                                        "founder",
                                        "headquarters",
                                        "launch_sites",
                                        "links",
                                        "name",
                                        "summary",
                                        "test_sites",
                                        "valuation",
                                        "vehicles"
                                    ]
                                },
                                {
                                    "typeName": "InfoLinks",
                                    "fieldNames": [
                                        "elon_twitter",
                                        "flickr",
                                        "twitter",
                                        "website"
                                    ]
                                },
                                {
                                    "typeName": "Landpad",
                                    "fieldNames": [
                                        "attempted_landings",
                                        "details",
                                        "full_name",
                                        "id",
                                        "landing_type",
                                        "location",
                                        "status",
                                        "successful_landings",
                                        "wikipedia"
                                    ]
                                },
                                {
                                    "typeName": "Launch",
                                    "fieldNames": [
                                        "details",
                                        "id",
                                        "is_tentative",
                                        "launch_date_local",
                                        "launch_date_unix",
                                        "launch_date_utc",
                                        "launch_site",
                                        "launch_success",
                                        "launch_year",
                                        "links",
                                        "mission_id",
                                        "mission_name",
                                        "rocket",
                                        "ships",
                                        "static_fire_date_unix",
                                        "static_fire_date_utc",
                                        "telemetry",
                                        "tentative_max_precision",
                                        "upcoming"
                                    ]
                                },
                                {
                                    "typeName": "LaunchLinks",
                                    "fieldNames": [
                                        "article_link",
                                        "flickr_images",
                                        "mission_patch",
                                        "mission_patch_small",
                                        "presskit",
                                        "reddit_campaign",
                                        "reddit_launch",
                                        "reddit_media",
                                        "reddit_recovery",
                                        "video_link",
                                        "wikipedia"
                                    ]
                                },
                                {
                                    "typeName": "LaunchRocket",
                                    "fieldNames": [
                                        "fairings",
                                        "first_stage",
                                        "rocket",
                                        "rocket_name",
                                        "rocket_type",
                                        "second_stage"
                                    ]
                                },
                                {
                                    "typeName": "LaunchRocketFairings",
                                    "fieldNames": [
                                        "recovered",
                                        "recovery_attempt",
                                        "reused",
                                        "ship"
                                    ]
                                },
                                {
                                    "typeName": "LaunchRocketFirstStage",
                                    "fieldNames": [
                                        "cores"
                                    ]
                                },
                                {
                                    "typeName": "LaunchRocketFirstStageCore",
                                    "fieldNames": [
                                        "block",
                                        "core",
                                        "flight",
                                        "gridfins",
                                        "land_success",
                                        "landing_intent",
                                        "landing_type",
                                        "landing_vehicle",
                                        "legs",
                                        "reused"
                                    ]
                                },
                                {
                                    "typeName": "LaunchRocketSecondStage",
                                    "fieldNames": [
                                        "block",
                                        "payloads"
                                    ]
                                },
                                {
                                    "typeName": "LaunchSite",
                                    "fieldNames": [
                                        "site_id",
                                        "site_name",
                                        "site_name_long"
                                    ]
                                },
                                {
                                    "typeName": "LaunchTelemetry",
                                    "fieldNames": [
                                        "flight_club"
                                    ]
                                },
                                {
                                    "typeName": "LaunchesPastResult",
                                    "fieldNames": [
                                        "data",
                                        "result"
                                    ]
                                },
                                {
                                    "typeName": "Launchpad",
                                    "fieldNames": [
                                        "attempted_launches",
                                        "details",
                                        "id",
                                        "location",
                                        "name",
                                        "status",
                                        "successful_launches",
                                        "vehicles_launched",
                                        "wikipedia"
                                    ]
                                },
                                {
                                    "typeName": "Link",
                                    "fieldNames": [
                                        "article",
                                        "reddit",
                                        "wikipedia"
                                    ]
                                },
                                {
                                    "typeName": "Location",
                                    "fieldNames": [
                                        "latitude",
                                        "longitude",
                                        "name",
                                        "region"
                                    ]
                                },
                                {
                                    "typeName": "Mass",
                                    "fieldNames": [
                                        "kg",
                                        "lb"
                                    ]
                                },
                                {
                                    "typeName": "Mission",
                                    "fieldNames": [
                                        "description",
                                        "id",
                                        "manufacturers",
                                        "name",
                                        "payloads",
                                        "twitter",
                                        "website",
                                        "wikipedia"
                                    ]
                                },
                                {
                                    "typeName": "MissionResult",
                                    "fieldNames": [
                                        "data",
                                        "result"
                                    ]
                                },
                                {
                                    "typeName": "Payload",
                                    "fieldNames": [
                                        "customers",
                                        "id",
                                        "manufacturer",
                                        "nationality",
                                        "norad_id",
                                        "orbit",
                                        "orbit_params",
                                        "payload_mass_kg",
                                        "payload_mass_lbs",
                                        "payload_type",
                                        "reused"
                                    ]
                                },
                                {
                                    "typeName": "PayloadOrbitParams",
                                    "fieldNames": [
                                        "apoapsis_km",
                                        "arg_of_pericenter",
                                        "eccentricity",
                                        "epoch",
                                        "inclination_deg",
                                        "lifespan_years",
                                        "longitude",
                                        "mean_anomaly",
                                        "mean_motion",
                                        "periapsis_km",
                                        "period_min",
                                        "raan",
                                        "reference_system",
                                        "regime",
                                        "semi_major_axis_km"
                                    ]
                                },
                                {
                                    "typeName": "Result",
                                    "fieldNames": [
                                        "totalCount"
                                    ]
                                },
                                {
                                    "typeName": "Roadster",
                                    "fieldNames": [
                                        "apoapsis_au",
                                        "details",
                                        "earth_distance_km",
                                        "earth_distance_mi",
                                        "eccentricity",
                                        "epoch_jd",
                                        "inclination",
                                        "launch_date_unix",
                                        "launch_date_utc",
                                        "launch_mass_kg",
                                        "launch_mass_lbs",
                                        "longitude",
                                        "mars_distance_km",
                                        "mars_distance_mi",
                                        "name",
                                        "norad_id",
                                        "orbit_type",
                                        "periapsis_arg",
                                        "periapsis_au",
                                        "period_days",
                                        "semi_major_axis_au",
                                        "speed_kph",
                                        "speed_mph",
                                        "wikipedia"
                                    ]
                                },
                                {
                                    "typeName": "Rocket",
                                    "fieldNames": [
                                        "active",
                                        "boosters",
                                        "company",
                                        "cost_per_launch",
                                        "country",
                                        "description",
                                        "diameter",
                                        "engines",
                                        "first_flight",
                                        "first_stage",
                                        "height",
                                        "id",
                                        "landing_legs",
                                        "mass",
                                        "name",
                                        "payload_weights",
                                        "second_stage",
                                        "stages",
                                        "success_rate_pct",
                                        "type",
                                        "wikipedia"
                                    ]
                                },
                                {
                                    "typeName": "RocketEngines",
                                    "fieldNames": [
                                        "engine_loss_max",
                                        "layout",
                                        "number",
                                        "propellant_1",
                                        "propellant_2",
                                        "thrust_sea_level",
                                        "thrust_to_weight",
                                        "thrust_vacuum",
                                        "type",
                                        "version"
                                    ]
                                },
                                {
                                    "typeName": "RocketFirstStage",
                                    "fieldNames": [
                                        "burn_time_sec",
                                        "engines",
                                        "fuel_amount_tons",
                                        "reusable",
                                        "thrust_sea_level",
                                        "thrust_vacuum"
                                    ]
                                },
                                {
                                    "typeName": "RocketLandingLegs",
                                    "fieldNames": [
                                        "material",
                                        "number"
                                    ]
                                },
                                {
                                    "typeName": "RocketPayloadWeight",
                                    "fieldNames": [
                                        "id",
                                        "kg",
                                        "lb",
                                        "name"
                                    ]
                                },
                                {
                                    "typeName": "RocketSecondStage",
                                    "fieldNames": [
                                        "burn_time_sec",
                                        "engines",
                                        "fuel_amount_tons",
                                        "payloads",
                                        "thrust"
                                    ]
                                },
                                {
                                    "typeName": "RocketSecondStagePayloadCompositeFairing",
                                    "fieldNames": [
                                        "diameter",
                                        "height"
                                    ]
                                },
                                {
                                    "typeName": "RocketSecondStagePayloads",
                                    "fieldNames": [
                                        "composite_fairing",
                                        "option_1"
                                    ]
                                },
                                {
                                    "typeName": "RocketsResult",
                                    "fieldNames": [
                                        "data",
                                        "result"
                                    ]
                                },
                                {
                                    "typeName": "Ship",
                                    "fieldNames": [
                                        "abs",
                                        "active",
                                        "attempted_landings",
                                        "class",
                                        "course_deg",
                                        "home_port",
                                        "id",
                                        "image",
                                        "imo",
                                        "missions",
                                        "mmsi",
                                        "model",
                                        "name",
                                        "position",
                                        "roles",
                                        "speed_kn",
                                        "status",
                                        "successful_landings",
                                        "type",
                                        "url",
                                        "weight_kg",
                                        "weight_lbs",
                                        "year_built"
                                    ]
                                },
                                {
                                    "typeName": "ShipLocation",
                                    "fieldNames": [
                                        "latitude",
                                        "longitude"
                                    ]
                                },
                                {
                                    "typeName": "ShipMission",
                                    "fieldNames": [
                                        "flight",
                                        "name"
                                    ]
                                },
                                {
                                    "typeName": "ShipsResult",
                                    "fieldNames": [
                                        "data",
                                        "result"
                                    ]
                                },
                                {
                                    "typeName": "Volume",
                                    "fieldNames": [
                                        "cubic_feet",
                                        "cubic_meters"
                                    ]
                                },
                                {
                                    "typeName": "users",
                                    "fieldNames": [
                                        "id",
                                        "name",
                                        "rocket",
                                        "timestamp",
                                        "twitter"
                                    ]
                                },
                                {
                                    "typeName": "users_aggregate",
                                    "fieldNames": [
                                        "aggregate",
                                        "nodes"
                                    ]
                                },
                                {
                                    "typeName": "users_aggregate_fields",
                                    "fieldNames": [
                                        "count",
                                        "max",
                                        "min"
                                    ]
                                },
                                {
                                    "typeName": "users_max_fields",
                                    "fieldNames": [
                                        "name",
                                        "rocket",
                                        "timestamp",
                                        "twitter"
                                    ]
                                },
                                {
                                    "typeName": "users_min_fields",
                                    "fieldNames": [
                                        "name",
                                        "rocket",
                                        "timestamp",
                                        "twitter"
                                    ]
                                },
                                {
                                    "typeName": "users_mutation_response",
                                    "fieldNames": [
                                        "affected_rows",
                                        "returning"
                                    ]
                                }
                            ],
                            "overrideFieldPathFromAlias": true,
                            "customGraphql": {
                                "fetch": {
                                    "url": {
                                        "staticVariableContent": "https://spacex-production.up.railway.app"
                                    },
                                    "method": "POST",
                                    "body": {},
                                    "baseUrl": {},
                                    "path": {}
                                },
                                "subscription": {
                                    "enabled": true,
                                    "url": {
                                        "staticVariableContent": "https://spacex-production.up.railway.app"
                                    },
                                    "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
                                    "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
                                },
                                "federation": {
                                    "enabled": true,
                                    "serviceSdl": "\"\"\"\"\"\"\ntype Address {\n  \"\"\"\"\"\"\n  address: String\n\n  \"\"\"\"\"\"\n  city: String\n\n  \"\"\"\"\"\"\n  state: String\n}\n\n\"\"\"\"\"\"\ntype Capsule {\n  \"\"\"\"\"\"\n  dragon: Dragon\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  landings: Int\n\n  \"\"\"\"\"\"\n  missions: [CapsuleMission]\n\n  \"\"\"\"\"\"\n  original_launch: Date\n\n  \"\"\"\"\"\"\n  reuse_count: Int\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype CapsuleMission {\n  \"\"\"\"\"\"\n  flight: Int\n\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ninput CapsulesFind {\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  landings: Int\n\n  \"\"\"\"\"\"\n  mission: String\n\n  \"\"\"\"\"\"\n  original_launch: Date\n\n  \"\"\"\"\"\"\n  reuse_count: Int\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Core {\n  \"\"\"\"\"\"\n  asds_attempts: Int\n\n  \"\"\"\"\"\"\n  asds_landings: Int\n\n  \"\"\"\"\"\"\n  block: Int\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  missions: [CapsuleMission]\n\n  \"\"\"\"\"\"\n  original_launch: Date\n\n  \"\"\"\"\"\"\n  reuse_count: Int\n\n  \"\"\"\"\"\"\n  rtls_attempts: Int\n\n  \"\"\"\"\"\"\n  rtls_landings: Int\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  water_landing: Boolean\n}\n\n\"\"\"\"\"\"\ntype CoreMission {\n  \"\"\"\"\"\"\n  flight: Int\n\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ninput CoresFind {\n  \"\"\"\"\"\"\n  asds_attempts: Int\n\n  \"\"\"\"\"\"\n  asds_landings: Int\n\n  \"\"\"\"\"\"\n  block: Int\n\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  missions: String\n\n  \"\"\"\"\"\"\n  original_launch: Date\n\n  \"\"\"\"\"\"\n  reuse_count: Int\n\n  \"\"\"\"\"\"\n  rtls_attempts: Int\n\n  \"\"\"\"\"\"\n  rtls_landings: Int\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  water_landing: Boolean\n}\n\n\"\"\"\"\"\"\nscalar Date\n\n\"\"\"\"\"\"\ntype Distance {\n  \"\"\"\"\"\"\n  feet: Float\n\n  \"\"\"\"\"\"\n  meters: Float\n}\n\n\"\"\"\"\"\"\ntype Dragon {\n  \"\"\"\"\"\"\n  active: Boolean\n\n  \"\"\"\"\"\"\n  crew_capacity: Int\n\n  \"\"\"\"\"\"\n  description: String\n\n  \"\"\"\"\"\"\n  diameter: Distance\n\n  \"\"\"\"\"\"\n  dry_mass_kg: Int\n\n  \"\"\"\"\"\"\n  dry_mass_lb: Int\n\n  \"\"\"\"\"\"\n  first_flight: String\n\n  \"\"\"\"\"\"\n  heat_shield: DragonHeatShield\n\n  \"\"\"\"\"\"\n  height_w_trunk: Distance\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  launch_payload_mass: Mass\n\n  \"\"\"\"\"\"\n  launch_payload_vol: Volume\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  orbit_duration_yr: Int\n\n  \"\"\"\"\"\"\n  pressurized_capsule: DragonPressurizedCapsule\n\n  \"\"\"\"\"\"\n  return_payload_mass: Mass\n\n  \"\"\"\"\"\"\n  return_payload_vol: Volume\n\n  \"\"\"\"\"\"\n  sidewall_angle_deg: Float\n\n  \"\"\"\"\"\"\n  thrusters: [DragonThrust]\n\n  \"\"\"\"\"\"\n  trunk: DragonTrunk\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype DragonHeatShield {\n  \"\"\"\"\"\"\n  dev_partner: String\n\n  \"\"\"\"\"\"\n  material: String\n\n  \"\"\"\"\"\"\n  size_meters: Float\n\n  \"\"\"\"\"\"\n  temp_degrees: Int\n}\n\n\"\"\"\"\"\"\ntype DragonPressurizedCapsule {\n  \"\"\"\"\"\"\n  payload_volume: Volume\n}\n\n\"\"\"\"\"\"\ntype DragonThrust {\n  \"\"\"\"\"\"\n  amount: Int\n\n  \"\"\"\"\"\"\n  fuel_1: String\n\n  \"\"\"\"\"\"\n  fuel_2: String\n\n  \"\"\"\"\"\"\n  pods: Int\n\n  \"\"\"\"\"\"\n  thrust: Force\n\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype DragonTrunk {\n  \"\"\"\"\"\"\n  cargo: DragonTrunkCargo\n\n  \"\"\"\"\"\"\n  trunk_volume: Volume\n}\n\n\"\"\"\"\"\"\ntype DragonTrunkCargo {\n  \"\"\"\"\"\"\n  solar_array: Int\n\n  \"\"\"\"\"\"\n  unpressurized_cargo: Boolean\n}\n\n\"\"\"\"\"\"\ntype Force {\n  \"\"\"\"\"\"\n  kN: Float\n\n  \"\"\"\"\"\"\n  lbf: Float\n}\n\n\"\"\"\"\"\"\ntype HistoriesResult {\n  \"\"\"\"\"\"\n  data: [History]\n\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ntype History {\n  \"\"\"\"\"\"\n  details: String\n\n  \"\"\"\"\"\"\n  event_date_unix: Date\n\n  \"\"\"\"\"\"\n  event_date_utc: Date\n\n  \"\"\"\"\"\"\n  flight: Launch\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  links: Link\n\n  \"\"\"\"\"\"\n  title: String\n}\n\n\"\"\"\"\"\"\ninput HistoryFind {\n  \"\"\"\"\"\"\n  end: Date\n\n  \"\"\"\"\"\"\n  flight_number: Int\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  start: Date\n}\n\n\"\"\"\"\"\"\ntype Info {\n  \"\"\"\"\"\"\n  ceo: String\n\n  \"\"\"\"\"\"\n  coo: String\n\n  \"\"\"\"\"\"\n  cto: String\n\n  \"\"\"\"\"\"\n  cto_propulsion: String\n\n  \"\"\"\"\"\"\n  employees: Int\n\n  \"\"\"\"\"\"\n  founded: Int\n\n  \"\"\"\"\"\"\n  founder: String\n\n  \"\"\"\"\"\"\n  headquarters: Address\n\n  \"\"\"\"\"\"\n  launch_sites: Int\n\n  \"\"\"\"\"\"\n  links: InfoLinks\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  summary: String\n\n  \"\"\"\"\"\"\n  test_sites: Int\n\n  \"\"\"\"\"\"\n  valuation: Float\n\n  \"\"\"\"\"\"\n  vehicles: Int\n}\n\n\"\"\"\"\"\"\ntype InfoLinks {\n  \"\"\"\"\"\"\n  elon_twitter: String\n\n  \"\"\"\"\"\"\n  flickr: String\n\n  \"\"\"\"\"\"\n  twitter: String\n\n  \"\"\"\"\"\"\n  website: String\n}\n\n\"\"\"\"\"\"\ntype Landpad {\n  \"\"\"\"\"\"\n  attempted_landings: String\n\n  \"\"\"\"\"\"\n  details: String\n\n  \"\"\"\"\"\"\n  full_name: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  landing_type: String\n\n  \"\"\"\"\"\"\n  location: Location\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  successful_landings: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Launch {\n  \"\"\"\"\"\"\n  details: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  is_tentative: Boolean\n\n  \"\"\"\"\"\"\n  launch_date_local: Date\n\n  \"\"\"\"\"\"\n  launch_date_unix: Date\n\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n\n  \"\"\"\"\"\"\n  launch_site: LaunchSite\n\n  \"\"\"\"\"\"\n  launch_success: Boolean\n\n  \"\"\"\"\"\"\n  launch_year: String\n\n  \"\"\"\"\"\"\n  links: LaunchLinks\n\n  \"\"\"\"\"\"\n  mission_id: [String]\n\n  \"\"\"\"\"\"\n  mission_name: String\n\n  \"\"\"\"\"\"\n  rocket: LaunchRocket\n\n  \"\"\"\"\"\"\n  ships: [Ship]\n\n  \"\"\"\"\"\"\n  static_fire_date_unix: Date\n\n  \"\"\"\"\"\"\n  static_fire_date_utc: Date\n\n  \"\"\"\"\"\"\n  telemetry: LaunchTelemetry\n\n  \"\"\"\"\"\"\n  tentative_max_precision: String\n\n  \"\"\"\"\"\"\n  upcoming: Boolean\n}\n\n\"\"\"\"\"\"\ninput LaunchFind {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n\n  \"\"\"\"\"\"\n  block: Int\n\n  \"\"\"\"\"\"\n  cap_serial: String\n\n  \"\"\"\"\"\"\n  capsule_reuse: String\n\n  \"\"\"\"\"\"\n  core_flight: Int\n\n  \"\"\"\"\"\"\n  core_reuse: String\n\n  \"\"\"\"\"\"\n  core_serial: String\n\n  \"\"\"\"\"\"\n  customer: String\n\n  \"\"\"\"\"\"\n  eccentricity: Float\n\n  \"\"\"\"\"\"\n  end: Date\n\n  \"\"\"\"\"\"\n  epoch: Date\n\n  \"\"\"\"\"\"\n  fairings_recovered: String\n\n  \"\"\"\"\"\"\n  fairings_recovery_attempt: String\n\n  \"\"\"\"\"\"\n  fairings_reuse: String\n\n  \"\"\"\"\"\"\n  fairings_reused: String\n\n  \"\"\"\"\"\"\n  fairings_ship: String\n\n  \"\"\"\"\"\"\n  gridfins: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  inclination_deg: Float\n\n  \"\"\"\"\"\"\n  land_success: String\n\n  \"\"\"\"\"\"\n  landing_intent: String\n\n  \"\"\"\"\"\"\n  landing_type: String\n\n  \"\"\"\"\"\"\n  landing_vehicle: String\n\n  \"\"\"\"\"\"\n  launch_date_local: Date\n\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n\n  \"\"\"\"\"\"\n  launch_success: String\n\n  \"\"\"\"\"\"\n  launch_year: String\n\n  \"\"\"\"\"\"\n  legs: String\n\n  \"\"\"\"\"\"\n  lifespan_years: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  manufacturer: String\n\n  \"\"\"\"\"\"\n  mean_motion: Float\n\n  \"\"\"\"\"\"\n  mission_id: String\n\n  \"\"\"\"\"\"\n  mission_name: String\n\n  \"\"\"\"\"\"\n  nationality: String\n\n  \"\"\"\"\"\"\n  norad_id: Int\n\n  \"\"\"\"\"\"\n  orbit: String\n\n  \"\"\"\"\"\"\n  payload_id: String\n\n  \"\"\"\"\"\"\n  payload_type: String\n\n  \"\"\"\"\"\"\n  periapsis_km: Float\n\n  \"\"\"\"\"\"\n  period_min: Float\n\n  \"\"\"\"\"\"\n  raan: Float\n\n  \"\"\"\"\"\"\n  reference_system: String\n\n  \"\"\"\"\"\"\n  regime: String\n\n  \"\"\"\"\"\"\n  reused: String\n\n  \"\"\"\"\"\"\n  rocket_id: String\n\n  \"\"\"\"\"\"\n  rocket_name: String\n\n  \"\"\"\"\"\"\n  rocket_type: String\n\n  \"\"\"\"\"\"\n  second_stage_block: String\n\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n\n  \"\"\"\"\"\"\n  ship: String\n\n  \"\"\"\"\"\"\n  side_core1_reuse: String\n\n  \"\"\"\"\"\"\n  side_core2_reuse: String\n\n  \"\"\"\"\"\"\n  site_id: String\n\n  \"\"\"\"\"\"\n  site_name_long: String\n\n  \"\"\"\"\"\"\n  site_name: String\n\n  \"\"\"\"\"\"\n  start: Date\n\n  \"\"\"\"\"\"\n  tbd: String\n\n  \"\"\"\"\"\"\n  tentative_max_precision: String\n\n  \"\"\"\"\"\"\n  tentative: String\n}\n\n\"\"\"\"\"\"\ntype LaunchLinks {\n  \"\"\"\"\"\"\n  article_link: String\n\n  \"\"\"\"\"\"\n  flickr_images: [String]\n\n  \"\"\"\"\"\"\n  mission_patch: String\n\n  \"\"\"\"\"\"\n  mission_patch_small: String\n\n  \"\"\"\"\"\"\n  presskit: String\n\n  \"\"\"\"\"\"\n  reddit_campaign: String\n\n  \"\"\"\"\"\"\n  reddit_launch: String\n\n  \"\"\"\"\"\"\n  reddit_media: String\n\n  \"\"\"\"\"\"\n  reddit_recovery: String\n\n  \"\"\"\"\"\"\n  video_link: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype LaunchRocket {\n  \"\"\"\"\"\"\n  fairings: LaunchRocketFairings\n\n  \"\"\"\"\"\"\n  first_stage: LaunchRocketFirstStage\n\n  \"\"\"\"\"\"\n  rocket: Rocket\n\n  \"\"\"\"\"\"\n  rocket_name: String\n\n  \"\"\"\"\"\"\n  rocket_type: String\n\n  \"\"\"\"\"\"\n  second_stage: LaunchRocketSecondStage\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFairings {\n  \"\"\"\"\"\"\n  recovered: Boolean\n\n  \"\"\"\"\"\"\n  recovery_attempt: Boolean\n\n  \"\"\"\"\"\"\n  reused: Boolean\n\n  \"\"\"\"\"\"\n  ship: String\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFirstStage {\n  \"\"\"\"\"\"\n  cores: [LaunchRocketFirstStageCore]\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFirstStageCore {\n  \"\"\"\"\"\"\n  block: Int\n\n  \"\"\"\"\"\"\n  core: Core\n\n  \"\"\"\"\"\"\n  flight: Int\n\n  \"\"\"\"\"\"\n  gridfins: Boolean\n\n  \"\"\"\"\"\"\n  land_success: Boolean\n\n  \"\"\"\"\"\"\n  landing_intent: Boolean\n\n  \"\"\"\"\"\"\n  landing_type: String\n\n  \"\"\"\"\"\"\n  landing_vehicle: String\n\n  \"\"\"\"\"\"\n  legs: Boolean\n\n  \"\"\"\"\"\"\n  reused: Boolean\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketSecondStage {\n  \"\"\"\"\"\"\n  block: Int\n\n  \"\"\"\"\"\"\n  payloads: [Payload]\n}\n\n\"\"\"\"\"\"\ntype LaunchSite {\n  \"\"\"\"\"\"\n  site_id: String\n\n  \"\"\"\"\"\"\n  site_name: String\n\n  \"\"\"\"\"\"\n  site_name_long: String\n}\n\n\"\"\"\"\"\"\ntype LaunchTelemetry {\n  \"\"\"\"\"\"\n  flight_club: String\n}\n\n\"\"\"\"\"\"\ntype LaunchesPastResult {\n  \"\"\"\"\"\"\n  data: [Launch]\n\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ntype Launchpad {\n  \"\"\"\"\"\"\n  attempted_launches: Int\n\n  \"\"\"\"\"\"\n  details: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  location: Location\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  successful_launches: Int\n\n  \"\"\"\"\"\"\n  vehicles_launched: [Rocket]\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Link {\n  \"\"\"\"\"\"\n  article: String\n\n  \"\"\"\"\"\"\n  reddit: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Location {\n  \"\"\"\"\"\"\n  latitude: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  region: String\n}\n\n\"\"\"\"\"\"\ntype Mass {\n  \"\"\"\"\"\"\n  kg: Int\n\n  \"\"\"\"\"\"\n  lb: Int\n}\n\n\"\"\"\"\"\"\ntype Mission {\n  \"\"\"\"\"\"\n  description: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  manufacturers: [String]\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  payloads: [Payload]\n\n  \"\"\"\"\"\"\n  twitter: String\n\n  \"\"\"\"\"\"\n  website: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype MissionResult {\n  \"\"\"\"\"\"\n  data: [Mission]\n\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ninput MissionsFind {\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  manufacturer: String\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  payload_id: String\n}\n\ntype Mutation {\n  \"\"\"\n  delete data from the table: \"users\"\n  \"\"\"\n  delete_users(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: users_bool_exp!\n  ): users_mutation_response\n\n  \"\"\"\n  insert data into the table: \"users\"\n  \"\"\"\n  insert_users(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [users_insert_input!]!\n\n    \"\"\"on conflict condition\"\"\"\n    on_conflict: users_on_conflict\n  ): users_mutation_response\n\n  \"\"\"\n  update data of the table: \"users\"\n  \"\"\"\n  update_users(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: users_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: users_bool_exp!\n  ): users_mutation_response\n}\n\n\"\"\"\"\"\"\nscalar ObjectID\n\n\"\"\"\"\"\"\ntype Payload {\n  \"\"\"\"\"\"\n  customers: [String]\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  manufacturer: String\n\n  \"\"\"\"\"\"\n  nationality: String\n\n  \"\"\"\"\"\"\n  norad_id: [Int]\n\n  \"\"\"\"\"\"\n  orbit: String\n\n  \"\"\"\"\"\"\n  orbit_params: PayloadOrbitParams\n\n  \"\"\"\"\"\"\n  payload_mass_kg: Float\n\n  \"\"\"\"\"\"\n  payload_mass_lbs: Float\n\n  \"\"\"\"\"\"\n  payload_type: String\n\n  \"\"\"\"\"\"\n  reused: Boolean\n}\n\n\"\"\"\"\"\"\ntype PayloadOrbitParams {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n\n  \"\"\"\"\"\"\n  arg_of_pericenter: Float\n\n  \"\"\"\"\"\"\n  eccentricity: Float\n\n  \"\"\"\"\"\"\n  epoch: Date\n\n  \"\"\"\"\"\"\n  inclination_deg: Float\n\n  \"\"\"\"\"\"\n  lifespan_years: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  mean_anomaly: Float\n\n  \"\"\"\"\"\"\n  mean_motion: Float\n\n  \"\"\"\"\"\"\n  periapsis_km: Float\n\n  \"\"\"\"\"\"\n  period_min: Float\n\n  \"\"\"\"\"\"\n  raan: Float\n\n  \"\"\"\"\"\"\n  reference_system: String\n\n  \"\"\"\"\"\"\n  regime: String\n\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n}\n\n\"\"\"\"\"\"\ninput PayloadsFind {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n\n  \"\"\"\"\"\"\n  customer: String\n\n  \"\"\"\"\"\"\n  eccentricity: Float\n\n  \"\"\"\"\"\"\n  epoch: Date\n\n  \"\"\"\"\"\"\n  inclination_deg: Float\n\n  \"\"\"\"\"\"\n  lifespan_years: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  manufacturer: String\n\n  \"\"\"\"\"\"\n  mean_motion: Float\n\n  \"\"\"\"\"\"\n  nationality: String\n\n  \"\"\"\"\"\"\n  norad_id: Int\n\n  \"\"\"\"\"\"\n  orbit: String\n\n  \"\"\"\"\"\"\n  payload_id: ID\n\n  \"\"\"\"\"\"\n  payload_type: String\n\n  \"\"\"\"\"\"\n  periapsis_km: Float\n\n  \"\"\"\"\"\"\n  period_min: Float\n\n  \"\"\"\"\"\"\n  raan: Float\n\n  \"\"\"\"\"\"\n  reference_system: String\n\n  \"\"\"\"\"\"\n  regime: String\n\n  \"\"\"\"\"\"\n  reused: Boolean\n\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n}\n\ntype Query {\n  \"\"\"\"\"\"\n  capsule(id: ID!): Capsule\n\n  \"\"\"\"\"\"\n  capsules(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n\n  \"\"\"\"\"\"\n  capsulesPast(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n\n  \"\"\"\"\"\"\n  capsulesUpcoming(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n\n  \"\"\"\"\"\"\n  company: Info\n\n  \"\"\"\"\"\"\n  core(id: ID!): Core\n\n  \"\"\"\"\"\"\n  cores(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n\n  \"\"\"\"\"\"\n  coresPast(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n\n  \"\"\"\"\"\"\n  coresUpcoming(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n\n  \"\"\"\"\"\"\n  dragon(id: ID!): Dragon\n\n  \"\"\"\"\"\"\n  dragons(limit: Int, offset: Int): [Dragon]\n\n  \"\"\"\"\"\"\n  histories(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): [History]\n\n  \"\"\"\"\"\"\n  historiesResult(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): HistoriesResult\n\n  \"\"\"\"\"\"\n  history(id: ID!): History\n\n  \"\"\"\"\"\"\n  landpad(id: ID!): Landpad\n\n  \"\"\"\"\"\"\n  landpads(limit: Int, offset: Int): [Landpad]\n\n  \"\"\"\"\"\"\n  launch(id: ID!): Launch\n\n  \"\"\"\"\"\"\n  launchLatest(offset: Int): Launch\n\n  \"\"\"\"\"\"\n  launchNext(offset: Int): Launch\n\n  \"\"\"\"\"\"\n  launches(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n\n  \"\"\"\"\"\"\n  launchesPast(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n\n  \"\"\"\"\"\"\n  launchesPastResult(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): LaunchesPastResult\n\n  \"\"\"\"\"\"\n  launchesUpcoming(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n\n  \"\"\"\"\"\"\n  launchpad(id: ID!): Launchpad\n\n  \"\"\"\"\"\"\n  launchpads(limit: Int, offset: Int): [Launchpad]\n\n  \"\"\"\"\"\"\n  mission(id: ID!): Mission\n\n  \"\"\"\"\"\"\n  missions(find: MissionsFind, limit: Int, offset: Int): [Mission]\n\n  \"\"\"\"\"\"\n  missionsResult(find: MissionsFind, limit: Int, offset: Int): MissionResult\n\n  \"\"\"\"\"\"\n  payload(id: ID!): Payload\n\n  \"\"\"\"\"\"\n  payloads(find: PayloadsFind, limit: Int, offset: Int, order: String, sort: String): [Payload]\n\n  \"\"\"\"\"\"\n  roadster: Roadster\n\n  \"\"\"\"\"\"\n  rocket(id: ID!): Rocket\n\n  \"\"\"\"\"\"\n  rockets(limit: Int, offset: Int): [Rocket]\n\n  \"\"\"\"\"\"\n  rocketsResult(limit: Int, offset: Int): RocketsResult\n\n  \"\"\"\"\"\"\n  ship(id: ID!): Ship\n\n  \"\"\"\"\"\"\n  ships(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): [Ship]\n\n  \"\"\"\"\"\"\n  shipsResult(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): ShipsResult\n\n  \"\"\"\n  fetch data from the table: \"users\"\n  \"\"\"\n  users(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): [users!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"users\"\n  \"\"\"\n  users_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): users_aggregate!\n\n  \"\"\"fetch data from the table: \"users\" using primary key columns\"\"\"\n  users_by_pk(id: uuid!): users\n}\n\n\"\"\"\"\"\"\ntype Result {\n  \"\"\"\"\"\"\n  totalCount: Int\n}\n\n\"\"\"\"\"\"\ntype Roadster {\n  \"\"\"\"\"\"\n  apoapsis_au: Float\n\n  \"\"\"\"\"\"\n  details: String\n\n  \"\"\"\"\"\"\n  earth_distance_km: Float\n\n  \"\"\"\"\"\"\n  earth_distance_mi: Float\n\n  \"\"\"\"\"\"\n  eccentricity: Float\n\n  \"\"\"\"\"\"\n  epoch_jd: Float\n\n  \"\"\"\"\"\"\n  inclination: Float\n\n  \"\"\"\"\"\"\n  launch_date_unix: Date\n\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n\n  \"\"\"\"\"\"\n  launch_mass_kg: Int\n\n  \"\"\"\"\"\"\n  launch_mass_lbs: Int\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  mars_distance_km: Float\n\n  \"\"\"\"\"\"\n  mars_distance_mi: Float\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  norad_id: Int\n\n  \"\"\"\"\"\"\n  orbit_type: Float\n\n  \"\"\"\"\"\"\n  periapsis_arg: Float\n\n  \"\"\"\"\"\"\n  periapsis_au: Float\n\n  \"\"\"\"\"\"\n  period_days: Float\n\n  \"\"\"\"\"\"\n  semi_major_axis_au: Float\n\n  \"\"\"\"\"\"\n  speed_kph: Float\n\n  \"\"\"\"\"\"\n  speed_mph: Float\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Rocket {\n  \"\"\"\"\"\"\n  active: Boolean\n\n  \"\"\"\"\"\"\n  boosters: Int\n\n  \"\"\"\"\"\"\n  company: String\n\n  \"\"\"\"\"\"\n  cost_per_launch: Int\n\n  \"\"\"\"\"\"\n  country: String\n\n  \"\"\"\"\"\"\n  description: String\n\n  \"\"\"\"\"\"\n  diameter: Distance\n\n  \"\"\"\"\"\"\n  engines: RocketEngines\n\n  \"\"\"\"\"\"\n  first_flight: Date\n\n  \"\"\"\"\"\"\n  first_stage: RocketFirstStage\n\n  \"\"\"\"\"\"\n  height: Distance\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  landing_legs: RocketLandingLegs\n\n  \"\"\"\"\"\"\n  mass: Mass\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  payload_weights: [RocketPayloadWeight]\n\n  \"\"\"\"\"\"\n  second_stage: RocketSecondStage\n\n  \"\"\"\"\"\"\n  stages: Int\n\n  \"\"\"\"\"\"\n  success_rate_pct: Int\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype RocketEngines {\n  \"\"\"\"\"\"\n  engine_loss_max: String\n\n  \"\"\"\"\"\"\n  layout: String\n\n  \"\"\"\"\"\"\n  number: Int\n\n  \"\"\"\"\"\"\n  propellant_1: String\n\n  \"\"\"\"\"\"\n  propellant_2: String\n\n  \"\"\"\"\"\"\n  thrust_sea_level: Force\n\n  \"\"\"\"\"\"\n  thrust_to_weight: Float\n\n  \"\"\"\"\"\"\n  thrust_vacuum: Force\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  version: String\n}\n\n\"\"\"\"\"\"\ntype RocketFirstStage {\n  \"\"\"\"\"\"\n  burn_time_sec: Int\n\n  \"\"\"\"\"\"\n  engines: Int\n\n  \"\"\"\"\"\"\n  fuel_amount_tons: Float\n\n  \"\"\"\"\"\"\n  reusable: Boolean\n\n  \"\"\"\"\"\"\n  thrust_sea_level: Force\n\n  \"\"\"\"\"\"\n  thrust_vacuum: Force\n}\n\n\"\"\"\"\"\"\ntype RocketLandingLegs {\n  \"\"\"\"\"\"\n  material: String\n\n  \"\"\"\"\"\"\n  number: Int\n}\n\n\"\"\"\"\"\"\ntype RocketPayloadWeight {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  kg: Int\n\n  \"\"\"\"\"\"\n  lb: Int\n\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStage {\n  \"\"\"\"\"\"\n  burn_time_sec: Int\n\n  \"\"\"\"\"\"\n  engines: Int\n\n  \"\"\"\"\"\"\n  fuel_amount_tons: Float\n\n  \"\"\"\"\"\"\n  payloads: RocketSecondStagePayloads\n\n  \"\"\"\"\"\"\n  thrust: Force\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStagePayloadCompositeFairing {\n  \"\"\"\"\"\"\n  diameter: Distance\n\n  \"\"\"\"\"\"\n  height: Distance\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStagePayloads {\n  \"\"\"\"\"\"\n  composite_fairing: RocketSecondStagePayloadCompositeFairing\n\n  \"\"\"\"\"\"\n  option_1: String\n}\n\n\"\"\"\"\"\"\ntype RocketsResult {\n  \"\"\"\"\"\"\n  data: [Rocket]\n\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ntype Ship {\n  \"\"\"\"\"\"\n  abs: Int\n\n  \"\"\"\"\"\"\n  active: Boolean\n\n  \"\"\"\"\"\"\n  attempted_landings: Int\n\n  \"\"\"\"\"\"\n  class: Int\n\n  \"\"\"\"\"\"\n  course_deg: Int\n\n  \"\"\"\"\"\"\n  home_port: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  image: String\n\n  \"\"\"\"\"\"\n  imo: Int\n\n  \"\"\"\"\"\"\n  missions: [ShipMission]\n\n  \"\"\"\"\"\"\n  mmsi: Int\n\n  \"\"\"\"\"\"\n  model: String\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  position: ShipLocation\n\n  \"\"\"\"\"\"\n  roles: [String]\n\n  \"\"\"\"\"\"\n  speed_kn: Float\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  successful_landings: Int\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  url: String\n\n  \"\"\"\"\"\"\n  weight_kg: Int\n\n  \"\"\"\"\"\"\n  weight_lbs: Int\n\n  \"\"\"\"\"\"\n  year_built: Int\n}\n\n\"\"\"\"\"\"\ntype ShipLocation {\n  \"\"\"\"\"\"\n  latitude: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n}\n\n\"\"\"\"\"\"\ntype ShipMission {\n  \"\"\"\"\"\"\n  flight: String\n\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ninput ShipsFind {\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  model: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  role: String\n\n  \"\"\"\"\"\"\n  active: Boolean\n\n  \"\"\"\"\"\"\n  imo: Int\n\n  \"\"\"\"\"\"\n  mmsi: Int\n\n  \"\"\"\"\"\"\n  abs: Int\n\n  \"\"\"\"\"\"\n  class: Int\n\n  \"\"\"\"\"\"\n  weight_lbs: Int\n\n  \"\"\"\"\"\"\n  weight_kg: Int\n\n  \"\"\"\"\"\"\n  year_built: Int\n\n  \"\"\"\"\"\"\n  home_port: String\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  speed_kn: Int\n\n  \"\"\"\"\"\"\n  course_deg: Int\n\n  \"\"\"\"\"\"\n  latitude: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  successful_landings: Int\n\n  \"\"\"\"\"\"\n  attempted_landings: Int\n\n  \"\"\"\"\"\"\n  mission: String\n}\n\n\"\"\"\"\"\"\ntype ShipsResult {\n  \"\"\"\"\"\"\n  data: [Ship]\n\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\nexpression to compare columns of type String. All fields are combined with logical 'AND'.\n\"\"\"\ninput String_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: String\n\n  \"\"\"\"\"\"\n  _gt: String\n\n  \"\"\"\"\"\"\n  _gte: String\n\n  \"\"\"\"\"\"\n  _ilike: String\n\n  \"\"\"\"\"\"\n  _in: [String!]\n\n  \"\"\"\"\"\"\n  _is_null: Boolean\n\n  \"\"\"\"\"\"\n  _like: String\n\n  \"\"\"\"\"\"\n  _lt: String\n\n  \"\"\"\"\"\"\n  _lte: String\n\n  \"\"\"\"\"\"\n  _neq: String\n\n  \"\"\"\"\"\"\n  _nilike: String\n\n  \"\"\"\"\"\"\n  _nin: [String!]\n\n  \"\"\"\"\"\"\n  _nlike: String\n\n  \"\"\"\"\"\"\n  _nsimilar: String\n\n  \"\"\"\"\"\"\n  _similar: String\n}\n\ntype Subscription {\n  \"\"\"\n  fetch data from the table: \"users\"\n  \"\"\"\n  users(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): [users!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"users\"\n  \"\"\"\n  users_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): users_aggregate!\n\n  \"\"\"fetch data from the table: \"users\" using primary key columns\"\"\"\n  users_by_pk(id: uuid!): users\n}\n\n\"\"\"\"\"\"\ntype Volume {\n  \"\"\"\"\"\"\n  cubic_feet: Int\n\n  \"\"\"\"\"\"\n  cubic_meters: Int\n}\n\n\"\"\"conflict action\"\"\"\nenum conflict_action {\n  \"\"\"ignore the insert on this row\"\"\"\n  ignore\n\n  \"\"\"update the row with the given values\"\"\"\n  update\n}\n\n\"\"\"column ordering options\"\"\"\nenum order_by {\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc\n\n  \"\"\"in the ascending order, nulls first\"\"\"\n  asc_nulls_first\n\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc_nulls_last\n\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc\n\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc_nulls_first\n\n  \"\"\"in the descending order, nulls last\"\"\"\n  desc_nulls_last\n}\n\nscalar timestamptz\n\n\"\"\"\nexpression to compare columns of type timestamptz. All fields are combined with logical 'AND'.\n\"\"\"\ninput timestamptz_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: timestamptz\n\n  \"\"\"\"\"\"\n  _gt: timestamptz\n\n  \"\"\"\"\"\"\n  _gte: timestamptz\n\n  \"\"\"\"\"\"\n  _in: [timestamptz!]\n\n  \"\"\"\"\"\"\n  _is_null: Boolean\n\n  \"\"\"\"\"\"\n  _lt: timestamptz\n\n  \"\"\"\"\"\"\n  _lte: timestamptz\n\n  \"\"\"\"\"\"\n  _neq: timestamptz\n\n  \"\"\"\"\"\"\n  _nin: [timestamptz!]\n}\n\n\"\"\"\ncolumns and relationships of \"users\"\n\"\"\"\ntype users {\n  \"\"\"\"\"\"\n  id: uuid!\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  rocket: String\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz!\n\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\naggregated selection of \"users\"\n\"\"\"\ntype users_aggregate {\n  \"\"\"\"\"\"\n  aggregate: users_aggregate_fields\n\n  \"\"\"\"\"\"\n  nodes: [users!]!\n}\n\n\"\"\"\naggregate fields of \"users\"\n\"\"\"\ntype users_aggregate_fields {\n  \"\"\"\"\"\"\n  count(columns: [users_select_column!], distinct: Boolean): Int\n\n  \"\"\"\"\"\"\n  max: users_max_fields\n\n  \"\"\"\"\"\"\n  min: users_min_fields\n}\n\n\"\"\"\norder by aggregate values of table \"users\"\n\"\"\"\ninput users_aggregate_order_by {\n  \"\"\"\"\"\"\n  count: order_by\n\n  \"\"\"\"\"\"\n  max: users_max_order_by\n\n  \"\"\"\"\"\"\n  min: users_min_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"users\"\n\"\"\"\ninput users_arr_rel_insert_input {\n  \"\"\"\"\"\"\n  data: [users_insert_input!]!\n\n  \"\"\"\"\"\"\n  on_conflict: users_on_conflict\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"users\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput users_bool_exp {\n  \"\"\"\"\"\"\n  _and: [users_bool_exp]\n\n  \"\"\"\"\"\"\n  _not: users_bool_exp\n\n  \"\"\"\"\"\"\n  _or: [users_bool_exp]\n\n  \"\"\"\"\"\"\n  id: uuid_comparison_exp\n\n  \"\"\"\"\"\"\n  name: String_comparison_exp\n\n  \"\"\"\"\"\"\n  rocket: String_comparison_exp\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz_comparison_exp\n\n  \"\"\"\"\"\"\n  twitter: String_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"users\"\n\"\"\"\nenum users_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  users_pkey\n}\n\n\"\"\"\ninput type for inserting data into table \"users\"\n\"\"\"\ninput users_insert_input {\n  \"\"\"\"\"\"\n  id: uuid\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  rocket: String\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype users_max_fields {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  rocket: String\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\norder by max() on columns of table \"users\"\n\"\"\"\ninput users_max_order_by {\n  \"\"\"\"\"\"\n  name: order_by\n\n  \"\"\"\"\"\"\n  rocket: order_by\n\n  \"\"\"\"\"\"\n  timestamp: order_by\n\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype users_min_fields {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  rocket: String\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\norder by min() on columns of table \"users\"\n\"\"\"\ninput users_min_order_by {\n  \"\"\"\"\"\"\n  name: order_by\n\n  \"\"\"\"\"\"\n  rocket: order_by\n\n  \"\"\"\"\"\"\n  timestamp: order_by\n\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"users\"\n\"\"\"\ntype users_mutation_response {\n  \"\"\"number of affected rows by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data of the affected rows by the mutation\"\"\"\n  returning: [users!]!\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"users\"\n\"\"\"\ninput users_obj_rel_insert_input {\n  \"\"\"\"\"\"\n  data: users_insert_input!\n\n  \"\"\"\"\"\"\n  on_conflict: users_on_conflict\n}\n\n\"\"\"\non conflict condition type for table \"users\"\n\"\"\"\ninput users_on_conflict {\n  \"\"\"\"\"\"\n  constraint: users_constraint!\n\n  \"\"\"\"\"\"\n  update_columns: [users_update_column!]!\n}\n\n\"\"\"\nordering options when selecting data from \"users\"\n\"\"\"\ninput users_order_by {\n  \"\"\"\"\"\"\n  id: order_by\n\n  \"\"\"\"\"\"\n  name: order_by\n\n  \"\"\"\"\"\"\n  rocket: order_by\n\n  \"\"\"\"\"\"\n  timestamp: order_by\n\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"\nselect columns of table \"users\"\n\"\"\"\nenum users_select_column {\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  rocket\n\n  \"\"\"column name\"\"\"\n  timestamp\n\n  \"\"\"column name\"\"\"\n  twitter\n}\n\n\"\"\"\ninput type for updating data in table \"users\"\n\"\"\"\ninput users_set_input {\n  \"\"\"\"\"\"\n  id: uuid\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  rocket: String\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\nupdate columns of table \"users\"\n\"\"\"\nenum users_update_column {\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  rocket\n\n  \"\"\"column name\"\"\"\n  timestamp\n\n  \"\"\"column name\"\"\"\n  twitter\n}\n\nscalar uuid\n\n\"\"\"\nexpression to compare columns of type uuid. All fields are combined with logical 'AND'.\n\"\"\"\ninput uuid_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: uuid\n\n  \"\"\"\"\"\"\n  _gt: uuid\n\n  \"\"\"\"\"\"\n  _gte: uuid\n\n  \"\"\"\"\"\"\n  _in: [uuid!]\n\n  \"\"\"\"\"\"\n  _is_null: Boolean\n\n  \"\"\"\"\"\"\n  _lt: uuid\n\n  \"\"\"\"\"\"\n  _lte: uuid\n\n  \"\"\"\"\"\"\n  _neq: uuid\n\n  \"\"\"\"\"\"\n  _nin: [uuid!]\n}\n"
                                },
                                "upstreamSchema": {
                                    "key": "9b97bb8d9b7b5d07329b45ce3f42fa9b78c6ee37"
                                }
                            },
                            "requestTimeoutSeconds": "10",
                            "id": "51d9ede2-3af9-4797-bac7-c8d6bd51581d"
                        }
                    ],
                    "fieldConfigurations": [
                        {
                            "typeName": "Mutation",
                            "fieldName": "delete_users",
                            "argumentsConfiguration": [
                                {
                                    "name": "where",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Mutation",
                            "fieldName": "insert_users",
                            "argumentsConfiguration": [
                                {
                                    "name": "objects",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "on_conflict",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Mutation",
                            "fieldName": "update_users",
                            "argumentsConfiguration": [
                                {
                                    "name": "_set",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "where",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "capsule",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "capsules",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "capsulesPast",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "capsulesUpcoming",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "core",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "cores",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "coresPast",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "coresUpcoming",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "dragon",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "dragons",
                            "argumentsConfiguration": [
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "histories",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "historiesResult",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "history",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "landpad",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "landpads",
                            "argumentsConfiguration": [
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "launch",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "launchLatest",
                            "argumentsConfiguration": [
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "launchNext",
                            "argumentsConfiguration": [
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "launches",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "launchesPast",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "launchesPastResult",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "launchesUpcoming",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "launchpad",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "launchpads",
                            "argumentsConfiguration": [
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "mission",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "missions",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "missionsResult",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "payload",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "payloads",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "rocket",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "rockets",
                            "argumentsConfiguration": [
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "rocketsResult",
                            "argumentsConfiguration": [
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "ship",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "ships",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "shipsResult",
                            "argumentsConfiguration": [
                                {
                                    "name": "find",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "sort",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "users",
                            "argumentsConfiguration": [
                                {
                                    "name": "distinct_on",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order_by",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "where",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "users_aggregate",
                            "argumentsConfiguration": [
                                {
                                    "name": "distinct_on",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order_by",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "where",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Query",
                            "fieldName": "users_by_pk",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Subscription",
                            "fieldName": "users",
                            "argumentsConfiguration": [
                                {
                                    "name": "distinct_on",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order_by",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "where",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Subscription",
                            "fieldName": "users_aggregate",
                            "argumentsConfiguration": [
                                {
                                    "name": "distinct_on",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "limit",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "offset",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "order_by",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "where",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "Subscription",
                            "fieldName": "users_by_pk",
                            "argumentsConfiguration": [
                                {
                                    "name": "id",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        },
                        {
                            "typeName": "users_aggregate_fields",
                            "fieldName": "count",
                            "argumentsConfiguration": [
                                {
                                    "name": "columns",
                                    "sourceType": "FIELD_ARGUMENT"
                                },
                                {
                                    "name": "distinct",
                                    "sourceType": "FIELD_ARGUMENT"
                                }
                            ]
                        }
                    ],
                    "graphqlSchema": "schema {\n  query: Query\n  mutation: Mutation\n  subscription: Subscription\n}\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\n\"\"\"\"\"\"\ntype Address {\n  \"\"\"\"\"\"\n  address: String\n  \"\"\"\"\"\"\n  city: String\n  \"\"\"\"\"\"\n  state: String\n}\n\n\"\"\"\"\"\"\ntype Capsule {\n  \"\"\"\"\"\"\n  dragon: Dragon\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  landings: Int\n  \"\"\"\"\"\"\n  missions: [CapsuleMission]\n  \"\"\"\"\"\"\n  original_launch: Date\n  \"\"\"\"\"\"\n  reuse_count: Int\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype CapsuleMission {\n  \"\"\"\"\"\"\n  flight: Int\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ninput CapsulesFind {\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  landings: Int\n  \"\"\"\"\"\"\n  mission: String\n  \"\"\"\"\"\"\n  original_launch: Date\n  \"\"\"\"\"\"\n  reuse_count: Int\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Core {\n  \"\"\"\"\"\"\n  asds_attempts: Int\n  \"\"\"\"\"\"\n  asds_landings: Int\n  \"\"\"\"\"\"\n  block: Int\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  missions: [CapsuleMission]\n  \"\"\"\"\"\"\n  original_launch: Date\n  \"\"\"\"\"\"\n  reuse_count: Int\n  \"\"\"\"\"\"\n  rtls_attempts: Int\n  \"\"\"\"\"\"\n  rtls_landings: Int\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  water_landing: Boolean\n}\n\n\"\"\"\"\"\"\ntype CoreMission {\n  \"\"\"\"\"\"\n  flight: Int\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ninput CoresFind {\n  \"\"\"\"\"\"\n  asds_attempts: Int\n  \"\"\"\"\"\"\n  asds_landings: Int\n  \"\"\"\"\"\"\n  block: Int\n  \"\"\"\"\"\"\n  id: String\n  \"\"\"\"\"\"\n  missions: String\n  \"\"\"\"\"\"\n  original_launch: Date\n  \"\"\"\"\"\"\n  reuse_count: Int\n  \"\"\"\"\"\"\n  rtls_attempts: Int\n  \"\"\"\"\"\"\n  rtls_landings: Int\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  water_landing: Boolean\n}\n\n\"\"\"\"\"\"\nscalar Date\n\n\"\"\"\"\"\"\ntype Distance {\n  \"\"\"\"\"\"\n  feet: Float\n  \"\"\"\"\"\"\n  meters: Float\n}\n\n\"\"\"\"\"\"\ntype Dragon {\n  \"\"\"\"\"\"\n  active: Boolean\n  \"\"\"\"\"\"\n  crew_capacity: Int\n  \"\"\"\"\"\"\n  description: String\n  \"\"\"\"\"\"\n  diameter: Distance\n  \"\"\"\"\"\"\n  dry_mass_kg: Int\n  \"\"\"\"\"\"\n  dry_mass_lb: Int\n  \"\"\"\"\"\"\n  first_flight: String\n  \"\"\"\"\"\"\n  heat_shield: DragonHeatShield\n  \"\"\"\"\"\"\n  height_w_trunk: Distance\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  launch_payload_mass: Mass\n  \"\"\"\"\"\"\n  launch_payload_vol: Volume\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  orbit_duration_yr: Int\n  \"\"\"\"\"\"\n  pressurized_capsule: DragonPressurizedCapsule\n  \"\"\"\"\"\"\n  return_payload_mass: Mass\n  \"\"\"\"\"\"\n  return_payload_vol: Volume\n  \"\"\"\"\"\"\n  sidewall_angle_deg: Float\n  \"\"\"\"\"\"\n  thrusters: [DragonThrust]\n  \"\"\"\"\"\"\n  trunk: DragonTrunk\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype DragonHeatShield {\n  \"\"\"\"\"\"\n  dev_partner: String\n  \"\"\"\"\"\"\n  material: String\n  \"\"\"\"\"\"\n  size_meters: Float\n  \"\"\"\"\"\"\n  temp_degrees: Int\n}\n\n\"\"\"\"\"\"\ntype DragonPressurizedCapsule {\n  \"\"\"\"\"\"\n  payload_volume: Volume\n}\n\n\"\"\"\"\"\"\ntype DragonThrust {\n  \"\"\"\"\"\"\n  amount: Int\n  \"\"\"\"\"\"\n  fuel_1: String\n  \"\"\"\"\"\"\n  fuel_2: String\n  \"\"\"\"\"\"\n  pods: Int\n  \"\"\"\"\"\"\n  thrust: Force\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype DragonTrunk {\n  \"\"\"\"\"\"\n  cargo: DragonTrunkCargo\n  \"\"\"\"\"\"\n  trunk_volume: Volume\n}\n\n\"\"\"\"\"\"\ntype DragonTrunkCargo {\n  \"\"\"\"\"\"\n  solar_array: Int\n  \"\"\"\"\"\"\n  unpressurized_cargo: Boolean\n}\n\n\"\"\"\"\"\"\ntype Force {\n  \"\"\"\"\"\"\n  kN: Float\n  \"\"\"\"\"\"\n  lbf: Float\n}\n\n\"\"\"\"\"\"\ntype HistoriesResult {\n  \"\"\"\"\"\"\n  data: [History]\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ntype History {\n  \"\"\"\"\"\"\n  details: String\n  \"\"\"\"\"\"\n  event_date_unix: Date\n  \"\"\"\"\"\"\n  event_date_utc: Date\n  \"\"\"\"\"\"\n  flight: Launch\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  links: Link\n  \"\"\"\"\"\"\n  title: String\n}\n\n\"\"\"\"\"\"\ninput HistoryFind {\n  \"\"\"\"\"\"\n  end: Date\n  \"\"\"\"\"\"\n  flight_number: Int\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  start: Date\n}\n\n\"\"\"\"\"\"\ntype Info {\n  \"\"\"\"\"\"\n  ceo: String\n  \"\"\"\"\"\"\n  coo: String\n  \"\"\"\"\"\"\n  cto: String\n  \"\"\"\"\"\"\n  cto_propulsion: String\n  \"\"\"\"\"\"\n  employees: Int\n  \"\"\"\"\"\"\n  founded: Int\n  \"\"\"\"\"\"\n  founder: String\n  \"\"\"\"\"\"\n  headquarters: Address\n  \"\"\"\"\"\"\n  launch_sites: Int\n  \"\"\"\"\"\"\n  links: InfoLinks\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  summary: String\n  \"\"\"\"\"\"\n  test_sites: Int\n  \"\"\"\"\"\"\n  valuation: Float\n  \"\"\"\"\"\"\n  vehicles: Int\n}\n\n\"\"\"\"\"\"\ntype InfoLinks {\n  \"\"\"\"\"\"\n  elon_twitter: String\n  \"\"\"\"\"\"\n  flickr: String\n  \"\"\"\"\"\"\n  twitter: String\n  \"\"\"\"\"\"\n  website: String\n}\n\n\"\"\"\"\"\"\ntype Landpad {\n  \"\"\"\"\"\"\n  attempted_landings: String\n  \"\"\"\"\"\"\n  details: String\n  \"\"\"\"\"\"\n  full_name: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  landing_type: String\n  \"\"\"\"\"\"\n  location: Location\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  successful_landings: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Launch {\n  \"\"\"\"\"\"\n  details: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  is_tentative: Boolean\n  \"\"\"\"\"\"\n  launch_date_local: Date\n  \"\"\"\"\"\"\n  launch_date_unix: Date\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n  \"\"\"\"\"\"\n  launch_site: LaunchSite\n  \"\"\"\"\"\"\n  launch_success: Boolean\n  \"\"\"\"\"\"\n  launch_year: String\n  \"\"\"\"\"\"\n  links: LaunchLinks\n  \"\"\"\"\"\"\n  mission_id: [String]\n  \"\"\"\"\"\"\n  mission_name: String\n  \"\"\"\"\"\"\n  rocket: LaunchRocket\n  \"\"\"\"\"\"\n  ships: [Ship]\n  \"\"\"\"\"\"\n  static_fire_date_unix: Date\n  \"\"\"\"\"\"\n  static_fire_date_utc: Date\n  \"\"\"\"\"\"\n  telemetry: LaunchTelemetry\n  \"\"\"\"\"\"\n  tentative_max_precision: String\n  \"\"\"\"\"\"\n  upcoming: Boolean\n}\n\n\"\"\"\"\"\"\ninput LaunchFind {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n  \"\"\"\"\"\"\n  block: Int\n  \"\"\"\"\"\"\n  cap_serial: String\n  \"\"\"\"\"\"\n  capsule_reuse: String\n  \"\"\"\"\"\"\n  core_flight: Int\n  \"\"\"\"\"\"\n  core_reuse: String\n  \"\"\"\"\"\"\n  core_serial: String\n  \"\"\"\"\"\"\n  customer: String\n  \"\"\"\"\"\"\n  eccentricity: Float\n  \"\"\"\"\"\"\n  end: Date\n  \"\"\"\"\"\"\n  epoch: Date\n  \"\"\"\"\"\"\n  fairings_recovered: String\n  \"\"\"\"\"\"\n  fairings_recovery_attempt: String\n  \"\"\"\"\"\"\n  fairings_reuse: String\n  \"\"\"\"\"\"\n  fairings_reused: String\n  \"\"\"\"\"\"\n  fairings_ship: String\n  \"\"\"\"\"\"\n  gridfins: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  inclination_deg: Float\n  \"\"\"\"\"\"\n  land_success: String\n  \"\"\"\"\"\"\n  landing_intent: String\n  \"\"\"\"\"\"\n  landing_type: String\n  \"\"\"\"\"\"\n  landing_vehicle: String\n  \"\"\"\"\"\"\n  launch_date_local: Date\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n  \"\"\"\"\"\"\n  launch_success: String\n  \"\"\"\"\"\"\n  launch_year: String\n  \"\"\"\"\"\"\n  legs: String\n  \"\"\"\"\"\"\n  lifespan_years: Float\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  manufacturer: String\n  \"\"\"\"\"\"\n  mean_motion: Float\n  \"\"\"\"\"\"\n  mission_id: String\n  \"\"\"\"\"\"\n  mission_name: String\n  \"\"\"\"\"\"\n  nationality: String\n  \"\"\"\"\"\"\n  norad_id: Int\n  \"\"\"\"\"\"\n  orbit: String\n  \"\"\"\"\"\"\n  payload_id: String\n  \"\"\"\"\"\"\n  payload_type: String\n  \"\"\"\"\"\"\n  periapsis_km: Float\n  \"\"\"\"\"\"\n  period_min: Float\n  \"\"\"\"\"\"\n  raan: Float\n  \"\"\"\"\"\"\n  reference_system: String\n  \"\"\"\"\"\"\n  regime: String\n  \"\"\"\"\"\"\n  reused: String\n  \"\"\"\"\"\"\n  rocket_id: String\n  \"\"\"\"\"\"\n  rocket_name: String\n  \"\"\"\"\"\"\n  rocket_type: String\n  \"\"\"\"\"\"\n  second_stage_block: String\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n  \"\"\"\"\"\"\n  ship: String\n  \"\"\"\"\"\"\n  side_core1_reuse: String\n  \"\"\"\"\"\"\n  side_core2_reuse: String\n  \"\"\"\"\"\"\n  site_id: String\n  \"\"\"\"\"\"\n  site_name_long: String\n  \"\"\"\"\"\"\n  site_name: String\n  \"\"\"\"\"\"\n  start: Date\n  \"\"\"\"\"\"\n  tbd: String\n  \"\"\"\"\"\"\n  tentative_max_precision: String\n  \"\"\"\"\"\"\n  tentative: String\n}\n\n\"\"\"\"\"\"\ntype LaunchLinks {\n  \"\"\"\"\"\"\n  article_link: String\n  \"\"\"\"\"\"\n  flickr_images: [String]\n  \"\"\"\"\"\"\n  mission_patch: String\n  \"\"\"\"\"\"\n  mission_patch_small: String\n  \"\"\"\"\"\"\n  presskit: String\n  \"\"\"\"\"\"\n  reddit_campaign: String\n  \"\"\"\"\"\"\n  reddit_launch: String\n  \"\"\"\"\"\"\n  reddit_media: String\n  \"\"\"\"\"\"\n  reddit_recovery: String\n  \"\"\"\"\"\"\n  video_link: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype LaunchRocket {\n  \"\"\"\"\"\"\n  fairings: LaunchRocketFairings\n  \"\"\"\"\"\"\n  first_stage: LaunchRocketFirstStage\n  \"\"\"\"\"\"\n  rocket: Rocket\n  \"\"\"\"\"\"\n  rocket_name: String\n  \"\"\"\"\"\"\n  rocket_type: String\n  \"\"\"\"\"\"\n  second_stage: LaunchRocketSecondStage\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFairings {\n  \"\"\"\"\"\"\n  recovered: Boolean\n  \"\"\"\"\"\"\n  recovery_attempt: Boolean\n  \"\"\"\"\"\"\n  reused: Boolean\n  \"\"\"\"\"\"\n  ship: String\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFirstStage {\n  \"\"\"\"\"\"\n  cores: [LaunchRocketFirstStageCore]\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFirstStageCore {\n  \"\"\"\"\"\"\n  block: Int\n  \"\"\"\"\"\"\n  core: Core\n  \"\"\"\"\"\"\n  flight: Int\n  \"\"\"\"\"\"\n  gridfins: Boolean\n  \"\"\"\"\"\"\n  land_success: Boolean\n  \"\"\"\"\"\"\n  landing_intent: Boolean\n  \"\"\"\"\"\"\n  landing_type: String\n  \"\"\"\"\"\"\n  landing_vehicle: String\n  \"\"\"\"\"\"\n  legs: Boolean\n  \"\"\"\"\"\"\n  reused: Boolean\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketSecondStage {\n  \"\"\"\"\"\"\n  block: Int\n  \"\"\"\"\"\"\n  payloads: [Payload]\n}\n\n\"\"\"\"\"\"\ntype LaunchSite {\n  \"\"\"\"\"\"\n  site_id: String\n  \"\"\"\"\"\"\n  site_name: String\n  \"\"\"\"\"\"\n  site_name_long: String\n}\n\n\"\"\"\"\"\"\ntype LaunchTelemetry {\n  \"\"\"\"\"\"\n  flight_club: String\n}\n\n\"\"\"\"\"\"\ntype LaunchesPastResult {\n  \"\"\"\"\"\"\n  data: [Launch]\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ntype Launchpad {\n  \"\"\"\"\"\"\n  attempted_launches: Int\n  \"\"\"\"\"\"\n  details: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  location: Location\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  successful_launches: Int\n  \"\"\"\"\"\"\n  vehicles_launched: [Rocket]\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Link {\n  \"\"\"\"\"\"\n  article: String\n  \"\"\"\"\"\"\n  reddit: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Location {\n  \"\"\"\"\"\"\n  latitude: Float\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  region: String\n}\n\n\"\"\"\"\"\"\ntype Mass {\n  \"\"\"\"\"\"\n  kg: Int\n  \"\"\"\"\"\"\n  lb: Int\n}\n\n\"\"\"\"\"\"\ntype Mission {\n  \"\"\"\"\"\"\n  description: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  manufacturers: [String]\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  payloads: [Payload]\n  \"\"\"\"\"\"\n  twitter: String\n  \"\"\"\"\"\"\n  website: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype MissionResult {\n  \"\"\"\"\"\"\n  data: [Mission]\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ninput MissionsFind {\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  manufacturer: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  payload_id: String\n}\n\ntype Mutation {\n  \"\"\"\n  delete data from the table: \"users\"\n  \"\"\"\n  delete_users(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: users_bool_exp!\n  ): users_mutation_response\n  \"\"\"\n  insert data into the table: \"users\"\n  \"\"\"\n  insert_users(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [users_insert_input!]!\n    \"\"\"on conflict condition\"\"\"\n    on_conflict: users_on_conflict\n  ): users_mutation_response\n  \"\"\"\n  update data of the table: \"users\"\n  \"\"\"\n  update_users(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: users_set_input\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: users_bool_exp!\n  ): users_mutation_response\n}\n\n\"\"\"\"\"\"\nscalar ObjectID\n\n\"\"\"\"\"\"\ntype Payload {\n  \"\"\"\"\"\"\n  customers: [String]\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  manufacturer: String\n  \"\"\"\"\"\"\n  nationality: String\n  \"\"\"\"\"\"\n  norad_id: [Int]\n  \"\"\"\"\"\"\n  orbit: String\n  \"\"\"\"\"\"\n  orbit_params: PayloadOrbitParams\n  \"\"\"\"\"\"\n  payload_mass_kg: Float\n  \"\"\"\"\"\"\n  payload_mass_lbs: Float\n  \"\"\"\"\"\"\n  payload_type: String\n  \"\"\"\"\"\"\n  reused: Boolean\n}\n\n\"\"\"\"\"\"\ntype PayloadOrbitParams {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n  \"\"\"\"\"\"\n  arg_of_pericenter: Float\n  \"\"\"\"\"\"\n  eccentricity: Float\n  \"\"\"\"\"\"\n  epoch: Date\n  \"\"\"\"\"\"\n  inclination_deg: Float\n  \"\"\"\"\"\"\n  lifespan_years: Float\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  mean_anomaly: Float\n  \"\"\"\"\"\"\n  mean_motion: Float\n  \"\"\"\"\"\"\n  periapsis_km: Float\n  \"\"\"\"\"\"\n  period_min: Float\n  \"\"\"\"\"\"\n  raan: Float\n  \"\"\"\"\"\"\n  reference_system: String\n  \"\"\"\"\"\"\n  regime: String\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n}\n\n\"\"\"\"\"\"\ninput PayloadsFind {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n  \"\"\"\"\"\"\n  customer: String\n  \"\"\"\"\"\"\n  eccentricity: Float\n  \"\"\"\"\"\"\n  epoch: Date\n  \"\"\"\"\"\"\n  inclination_deg: Float\n  \"\"\"\"\"\"\n  lifespan_years: Float\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  manufacturer: String\n  \"\"\"\"\"\"\n  mean_motion: Float\n  \"\"\"\"\"\"\n  nationality: String\n  \"\"\"\"\"\"\n  norad_id: Int\n  \"\"\"\"\"\"\n  orbit: String\n  \"\"\"\"\"\"\n  payload_id: ID\n  \"\"\"\"\"\"\n  payload_type: String\n  \"\"\"\"\"\"\n  periapsis_km: Float\n  \"\"\"\"\"\"\n  period_min: Float\n  \"\"\"\"\"\"\n  raan: Float\n  \"\"\"\"\"\"\n  reference_system: String\n  \"\"\"\"\"\"\n  regime: String\n  \"\"\"\"\"\"\n  reused: Boolean\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n}\n\ntype Query {\n  \"\"\"\"\"\"\n  capsule(id: ID!): Capsule\n  \"\"\"\"\"\"\n  capsules(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  \"\"\"\"\"\"\n  capsulesPast(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  \"\"\"\"\"\"\n  capsulesUpcoming(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  \"\"\"\"\"\"\n  company: Info\n  \"\"\"\"\"\"\n  core(id: ID!): Core\n  \"\"\"\"\"\"\n  cores(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  \"\"\"\"\"\"\n  coresPast(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  \"\"\"\"\"\"\n  coresUpcoming(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  \"\"\"\"\"\"\n  dragon(id: ID!): Dragon\n  \"\"\"\"\"\"\n  dragons(limit: Int, offset: Int): [Dragon]\n  \"\"\"\"\"\"\n  histories(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): [History]\n  \"\"\"\"\"\"\n  historiesResult(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): HistoriesResult\n  \"\"\"\"\"\"\n  history(id: ID!): History\n  \"\"\"\"\"\"\n  landpad(id: ID!): Landpad\n  \"\"\"\"\"\"\n  landpads(limit: Int, offset: Int): [Landpad]\n  \"\"\"\"\"\"\n  launch(id: ID!): Launch\n  \"\"\"\"\"\"\n  launchLatest(offset: Int): Launch\n  \"\"\"\"\"\"\n  launchNext(offset: Int): Launch\n  \"\"\"\"\"\"\n  launches(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  \"\"\"\"\"\"\n  launchesPast(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  \"\"\"\"\"\"\n  launchesPastResult(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): LaunchesPastResult\n  \"\"\"\"\"\"\n  launchesUpcoming(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  \"\"\"\"\"\"\n  launchpad(id: ID!): Launchpad\n  \"\"\"\"\"\"\n  launchpads(limit: Int, offset: Int): [Launchpad]\n  \"\"\"\"\"\"\n  mission(id: ID!): Mission\n  \"\"\"\"\"\"\n  missions(find: MissionsFind, limit: Int, offset: Int): [Mission]\n  \"\"\"\"\"\"\n  missionsResult(find: MissionsFind, limit: Int, offset: Int): MissionResult\n  \"\"\"\"\"\"\n  payload(id: ID!): Payload\n  \"\"\"\"\"\"\n  payloads(find: PayloadsFind, limit: Int, offset: Int, order: String, sort: String): [Payload]\n  \"\"\"\"\"\"\n  roadster: Roadster\n  \"\"\"\"\"\"\n  rocket(id: ID!): Rocket\n  \"\"\"\"\"\"\n  rockets(limit: Int, offset: Int): [Rocket]\n  \"\"\"\"\"\"\n  rocketsResult(limit: Int, offset: Int): RocketsResult\n  \"\"\"\"\"\"\n  ship(id: ID!): Ship\n  \"\"\"\"\"\"\n  ships(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): [Ship]\n  \"\"\"\"\"\"\n  shipsResult(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): ShipsResult\n  \"\"\"\n  fetch data from the table: \"users\"\n  \"\"\"\n  users(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): [users!]!\n  \"\"\"\n  fetch aggregated fields from the table: \"users\"\n  \"\"\"\n  users_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): users_aggregate!\n  \"\"\"fetch data from the table: \"users\" using primary key columns\"\"\"\n  users_by_pk(id: uuid!): users\n}\n\n\"\"\"\"\"\"\ntype Result {\n  \"\"\"\"\"\"\n  totalCount: Int\n}\n\n\"\"\"\"\"\"\ntype Roadster {\n  \"\"\"\"\"\"\n  apoapsis_au: Float\n  \"\"\"\"\"\"\n  details: String\n  \"\"\"\"\"\"\n  earth_distance_km: Float\n  \"\"\"\"\"\"\n  earth_distance_mi: Float\n  \"\"\"\"\"\"\n  eccentricity: Float\n  \"\"\"\"\"\"\n  epoch_jd: Float\n  \"\"\"\"\"\"\n  inclination: Float\n  \"\"\"\"\"\"\n  launch_date_unix: Date\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n  \"\"\"\"\"\"\n  launch_mass_kg: Int\n  \"\"\"\"\"\"\n  launch_mass_lbs: Int\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  mars_distance_km: Float\n  \"\"\"\"\"\"\n  mars_distance_mi: Float\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  norad_id: Int\n  \"\"\"\"\"\"\n  orbit_type: Float\n  \"\"\"\"\"\"\n  periapsis_arg: Float\n  \"\"\"\"\"\"\n  periapsis_au: Float\n  \"\"\"\"\"\"\n  period_days: Float\n  \"\"\"\"\"\"\n  semi_major_axis_au: Float\n  \"\"\"\"\"\"\n  speed_kph: Float\n  \"\"\"\"\"\"\n  speed_mph: Float\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Rocket {\n  \"\"\"\"\"\"\n  active: Boolean\n  \"\"\"\"\"\"\n  boosters: Int\n  \"\"\"\"\"\"\n  company: String\n  \"\"\"\"\"\"\n  cost_per_launch: Int\n  \"\"\"\"\"\"\n  country: String\n  \"\"\"\"\"\"\n  description: String\n  \"\"\"\"\"\"\n  diameter: Distance\n  \"\"\"\"\"\"\n  engines: RocketEngines\n  \"\"\"\"\"\"\n  first_flight: Date\n  \"\"\"\"\"\"\n  first_stage: RocketFirstStage\n  \"\"\"\"\"\"\n  height: Distance\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  landing_legs: RocketLandingLegs\n  \"\"\"\"\"\"\n  mass: Mass\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  payload_weights: [RocketPayloadWeight]\n  \"\"\"\"\"\"\n  second_stage: RocketSecondStage\n  \"\"\"\"\"\"\n  stages: Int\n  \"\"\"\"\"\"\n  success_rate_pct: Int\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype RocketEngines {\n  \"\"\"\"\"\"\n  engine_loss_max: String\n  \"\"\"\"\"\"\n  layout: String\n  \"\"\"\"\"\"\n  number: Int\n  \"\"\"\"\"\"\n  propellant_1: String\n  \"\"\"\"\"\"\n  propellant_2: String\n  \"\"\"\"\"\"\n  thrust_sea_level: Force\n  \"\"\"\"\"\"\n  thrust_to_weight: Float\n  \"\"\"\"\"\"\n  thrust_vacuum: Force\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  version: String\n}\n\n\"\"\"\"\"\"\ntype RocketFirstStage {\n  \"\"\"\"\"\"\n  burn_time_sec: Int\n  \"\"\"\"\"\"\n  engines: Int\n  \"\"\"\"\"\"\n  fuel_amount_tons: Float\n  \"\"\"\"\"\"\n  reusable: Boolean\n  \"\"\"\"\"\"\n  thrust_sea_level: Force\n  \"\"\"\"\"\"\n  thrust_vacuum: Force\n}\n\n\"\"\"\"\"\"\ntype RocketLandingLegs {\n  \"\"\"\"\"\"\n  material: String\n  \"\"\"\"\"\"\n  number: Int\n}\n\n\"\"\"\"\"\"\ntype RocketPayloadWeight {\n  \"\"\"\"\"\"\n  id: String\n  \"\"\"\"\"\"\n  kg: Int\n  \"\"\"\"\"\"\n  lb: Int\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStage {\n  \"\"\"\"\"\"\n  burn_time_sec: Int\n  \"\"\"\"\"\"\n  engines: Int\n  \"\"\"\"\"\"\n  fuel_amount_tons: Float\n  \"\"\"\"\"\"\n  payloads: RocketSecondStagePayloads\n  \"\"\"\"\"\"\n  thrust: Force\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStagePayloadCompositeFairing {\n  \"\"\"\"\"\"\n  diameter: Distance\n  \"\"\"\"\"\"\n  height: Distance\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStagePayloads {\n  \"\"\"\"\"\"\n  composite_fairing: RocketSecondStagePayloadCompositeFairing\n  \"\"\"\"\"\"\n  option_1: String\n}\n\n\"\"\"\"\"\"\ntype RocketsResult {\n  \"\"\"\"\"\"\n  data: [Rocket]\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ntype Ship {\n  \"\"\"\"\"\"\n  abs: Int\n  \"\"\"\"\"\"\n  active: Boolean\n  \"\"\"\"\"\"\n  attempted_landings: Int\n  \"\"\"\"\"\"\n  class: Int\n  \"\"\"\"\"\"\n  course_deg: Int\n  \"\"\"\"\"\"\n  home_port: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  image: String\n  \"\"\"\"\"\"\n  imo: Int\n  \"\"\"\"\"\"\n  missions: [ShipMission]\n  \"\"\"\"\"\"\n  mmsi: Int\n  \"\"\"\"\"\"\n  model: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  position: ShipLocation\n  \"\"\"\"\"\"\n  roles: [String]\n  \"\"\"\"\"\"\n  speed_kn: Float\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  successful_landings: Int\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  url: String\n  \"\"\"\"\"\"\n  weight_kg: Int\n  \"\"\"\"\"\"\n  weight_lbs: Int\n  \"\"\"\"\"\"\n  year_built: Int\n}\n\n\"\"\"\"\"\"\ntype ShipLocation {\n  \"\"\"\"\"\"\n  latitude: Float\n  \"\"\"\"\"\"\n  longitude: Float\n}\n\n\"\"\"\"\"\"\ntype ShipMission {\n  \"\"\"\"\"\"\n  flight: String\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ninput ShipsFind {\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  model: String\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  role: String\n  \"\"\"\"\"\"\n  active: Boolean\n  \"\"\"\"\"\"\n  imo: Int\n  \"\"\"\"\"\"\n  mmsi: Int\n  \"\"\"\"\"\"\n  abs: Int\n  \"\"\"\"\"\"\n  class: Int\n  \"\"\"\"\"\"\n  weight_lbs: Int\n  \"\"\"\"\"\"\n  weight_kg: Int\n  \"\"\"\"\"\"\n  year_built: Int\n  \"\"\"\"\"\"\n  home_port: String\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  speed_kn: Int\n  \"\"\"\"\"\"\n  course_deg: Int\n  \"\"\"\"\"\"\n  latitude: Float\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  successful_landings: Int\n  \"\"\"\"\"\"\n  attempted_landings: Int\n  \"\"\"\"\"\"\n  mission: String\n}\n\n\"\"\"\"\"\"\ntype ShipsResult {\n  \"\"\"\"\"\"\n  data: [Ship]\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\nexpression to compare columns of type String. All fields are combined with logical 'AND'.\n\"\"\"\ninput String_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: String\n  \"\"\"\"\"\"\n  _gt: String\n  \"\"\"\"\"\"\n  _gte: String\n  \"\"\"\"\"\"\n  _ilike: String\n  \"\"\"\"\"\"\n  _in: [String!]\n  \"\"\"\"\"\"\n  _is_null: Boolean\n  \"\"\"\"\"\"\n  _like: String\n  \"\"\"\"\"\"\n  _lt: String\n  \"\"\"\"\"\"\n  _lte: String\n  \"\"\"\"\"\"\n  _neq: String\n  \"\"\"\"\"\"\n  _nilike: String\n  \"\"\"\"\"\"\n  _nin: [String!]\n  \"\"\"\"\"\"\n  _nlike: String\n  \"\"\"\"\"\"\n  _nsimilar: String\n  \"\"\"\"\"\"\n  _similar: String\n}\n\ntype Subscription {\n  \"\"\"\n  fetch data from the table: \"users\"\n  \"\"\"\n  users(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): [users!]!\n  \"\"\"\n  fetch aggregated fields from the table: \"users\"\n  \"\"\"\n  users_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): users_aggregate!\n  \"\"\"fetch data from the table: \"users\" using primary key columns\"\"\"\n  users_by_pk(id: uuid!): users\n}\n\n\"\"\"\"\"\"\ntype Volume {\n  \"\"\"\"\"\"\n  cubic_feet: Int\n  \"\"\"\"\"\"\n  cubic_meters: Int\n}\n\n\"\"\"conflict action\"\"\"\nenum conflict_action {\n  \"\"\"ignore the insert on this row\"\"\"\n  ignore\n  \"\"\"update the row with the given values\"\"\"\n  update\n}\n\n\"\"\"column ordering options\"\"\"\nenum order_by {\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc\n  \"\"\"in the ascending order, nulls first\"\"\"\n  asc_nulls_first\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc_nulls_last\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc_nulls_first\n  \"\"\"in the descending order, nulls last\"\"\"\n  desc_nulls_last\n}\n\nscalar timestamptz\n\n\"\"\"\nexpression to compare columns of type timestamptz. All fields are combined with logical 'AND'.\n\"\"\"\ninput timestamptz_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: timestamptz\n  \"\"\"\"\"\"\n  _gt: timestamptz\n  \"\"\"\"\"\"\n  _gte: timestamptz\n  \"\"\"\"\"\"\n  _in: [timestamptz!]\n  \"\"\"\"\"\"\n  _is_null: Boolean\n  \"\"\"\"\"\"\n  _lt: timestamptz\n  \"\"\"\"\"\"\n  _lte: timestamptz\n  \"\"\"\"\"\"\n  _neq: timestamptz\n  \"\"\"\"\"\"\n  _nin: [timestamptz!]\n}\n\n\"\"\"\ncolumns and relationships of \"users\"\n\"\"\"\ntype users {\n  \"\"\"\"\"\"\n  id: uuid!\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  rocket: String\n  \"\"\"\"\"\"\n  timestamp: timestamptz!\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\naggregated selection of \"users\"\n\"\"\"\ntype users_aggregate {\n  \"\"\"\"\"\"\n  aggregate: users_aggregate_fields\n  \"\"\"\"\"\"\n  nodes: [users!]!\n}\n\n\"\"\"\naggregate fields of \"users\"\n\"\"\"\ntype users_aggregate_fields {\n  \"\"\"\"\"\"\n  count(columns: [users_select_column!], distinct: Boolean): Int\n  \"\"\"\"\"\"\n  max: users_max_fields\n  \"\"\"\"\"\"\n  min: users_min_fields\n}\n\n\"\"\"\norder by aggregate values of table \"users\"\n\"\"\"\ninput users_aggregate_order_by {\n  \"\"\"\"\"\"\n  count: order_by\n  \"\"\"\"\"\"\n  max: users_max_order_by\n  \"\"\"\"\"\"\n  min: users_min_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"users\"\n\"\"\"\ninput users_arr_rel_insert_input {\n  \"\"\"\"\"\"\n  data: [users_insert_input!]!\n  \"\"\"\"\"\"\n  on_conflict: users_on_conflict\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"users\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput users_bool_exp {\n  \"\"\"\"\"\"\n  _and: [users_bool_exp]\n  \"\"\"\"\"\"\n  _not: users_bool_exp\n  \"\"\"\"\"\"\n  _or: [users_bool_exp]\n  \"\"\"\"\"\"\n  id: uuid_comparison_exp\n  \"\"\"\"\"\"\n  name: String_comparison_exp\n  \"\"\"\"\"\"\n  rocket: String_comparison_exp\n  \"\"\"\"\"\"\n  timestamp: timestamptz_comparison_exp\n  \"\"\"\"\"\"\n  twitter: String_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"users\"\n\"\"\"\nenum users_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  users_pkey\n}\n\n\"\"\"\ninput type for inserting data into table \"users\"\n\"\"\"\ninput users_insert_input {\n  \"\"\"\"\"\"\n  id: uuid\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  rocket: String\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype users_max_fields {\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  rocket: String\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\norder by max() on columns of table \"users\"\n\"\"\"\ninput users_max_order_by {\n  \"\"\"\"\"\"\n  name: order_by\n  \"\"\"\"\"\"\n  rocket: order_by\n  \"\"\"\"\"\"\n  timestamp: order_by\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype users_min_fields {\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  rocket: String\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\norder by min() on columns of table \"users\"\n\"\"\"\ninput users_min_order_by {\n  \"\"\"\"\"\"\n  name: order_by\n  \"\"\"\"\"\"\n  rocket: order_by\n  \"\"\"\"\"\"\n  timestamp: order_by\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"users\"\n\"\"\"\ntype users_mutation_response {\n  \"\"\"number of affected rows by the mutation\"\"\"\n  affected_rows: Int!\n  \"\"\"data of the affected rows by the mutation\"\"\"\n  returning: [users!]!\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"users\"\n\"\"\"\ninput users_obj_rel_insert_input {\n  \"\"\"\"\"\"\n  data: users_insert_input!\n  \"\"\"\"\"\"\n  on_conflict: users_on_conflict\n}\n\n\"\"\"\non conflict condition type for table \"users\"\n\"\"\"\ninput users_on_conflict {\n  \"\"\"\"\"\"\n  constraint: users_constraint!\n  \"\"\"\"\"\"\n  update_columns: [users_update_column!]!\n}\n\n\"\"\"\nordering options when selecting data from \"users\"\n\"\"\"\ninput users_order_by {\n  \"\"\"\"\"\"\n  id: order_by\n  \"\"\"\"\"\"\n  name: order_by\n  \"\"\"\"\"\"\n  rocket: order_by\n  \"\"\"\"\"\"\n  timestamp: order_by\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"\nselect columns of table \"users\"\n\"\"\"\nenum users_select_column {\n  \"\"\"column name\"\"\"\n  id\n  \"\"\"column name\"\"\"\n  name\n  \"\"\"column name\"\"\"\n  rocket\n  \"\"\"column name\"\"\"\n  timestamp\n  \"\"\"column name\"\"\"\n  twitter\n}\n\n\"\"\"\ninput type for updating data in table \"users\"\n\"\"\"\ninput users_set_input {\n  \"\"\"\"\"\"\n  id: uuid\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  rocket: String\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\nupdate columns of table \"users\"\n\"\"\"\nenum users_update_column {\n  \"\"\"column name\"\"\"\n  id\n  \"\"\"column name\"\"\"\n  name\n  \"\"\"column name\"\"\"\n  rocket\n  \"\"\"column name\"\"\"\n  timestamp\n  \"\"\"column name\"\"\"\n  twitter\n}\n\nscalar uuid\n\n\"\"\"\nexpression to compare columns of type uuid. All fields are combined with logical 'AND'.\n\"\"\"\ninput uuid_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: uuid\n  \"\"\"\"\"\"\n  _gt: uuid\n  \"\"\"\"\"\"\n  _gte: uuid\n  \"\"\"\"\"\"\n  _in: [uuid!]\n  \"\"\"\"\"\"\n  _is_null: Boolean\n  \"\"\"\"\"\"\n  _lt: uuid\n  \"\"\"\"\"\"\n  _lte: uuid\n  \"\"\"\"\"\"\n  _neq: uuid\n  \"\"\"\"\"\"\n  _nin: [uuid!]\n}",
                    "stringStorage": {
                        "9b97bb8d9b7b5d07329b45ce3f42fa9b78c6ee37": "schema {\n  query: Query\n  mutation: Mutation\n  subscription: Subscription\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\n\"\"\"\"\"\"\ntype Address {\n  \"\"\"\"\"\"\n  address: String\n  \"\"\"\"\"\"\n  city: String\n  \"\"\"\"\"\"\n  state: String\n}\n\n\"\"\"\"\"\"\ntype Capsule {\n  \"\"\"\"\"\"\n  dragon: Dragon\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  landings: Int\n  \"\"\"\"\"\"\n  missions: [CapsuleMission]\n  \"\"\"\"\"\"\n  original_launch: Date\n  \"\"\"\"\"\"\n  reuse_count: Int\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype CapsuleMission {\n  \"\"\"\"\"\"\n  flight: Int\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ninput CapsulesFind {\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  landings: Int\n  \"\"\"\"\"\"\n  mission: String\n  \"\"\"\"\"\"\n  original_launch: Date\n  \"\"\"\"\"\"\n  reuse_count: Int\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Core {\n  \"\"\"\"\"\"\n  asds_attempts: Int\n  \"\"\"\"\"\"\n  asds_landings: Int\n  \"\"\"\"\"\"\n  block: Int\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  missions: [CapsuleMission]\n  \"\"\"\"\"\"\n  original_launch: Date\n  \"\"\"\"\"\"\n  reuse_count: Int\n  \"\"\"\"\"\"\n  rtls_attempts: Int\n  \"\"\"\"\"\"\n  rtls_landings: Int\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  water_landing: Boolean\n}\n\n\"\"\"\"\"\"\ntype CoreMission {\n  \"\"\"\"\"\"\n  flight: Int\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ninput CoresFind {\n  \"\"\"\"\"\"\n  asds_attempts: Int\n  \"\"\"\"\"\"\n  asds_landings: Int\n  \"\"\"\"\"\"\n  block: Int\n  \"\"\"\"\"\"\n  id: String\n  \"\"\"\"\"\"\n  missions: String\n  \"\"\"\"\"\"\n  original_launch: Date\n  \"\"\"\"\"\"\n  reuse_count: Int\n  \"\"\"\"\"\"\n  rtls_attempts: Int\n  \"\"\"\"\"\"\n  rtls_landings: Int\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  water_landing: Boolean\n}\n\n\"\"\"\"\"\"\nscalar Date\n\n\"\"\"\"\"\"\ntype Distance {\n  \"\"\"\"\"\"\n  feet: Float\n  \"\"\"\"\"\"\n  meters: Float\n}\n\n\"\"\"\"\"\"\ntype Dragon {\n  \"\"\"\"\"\"\n  active: Boolean\n  \"\"\"\"\"\"\n  crew_capacity: Int\n  \"\"\"\"\"\"\n  description: String\n  \"\"\"\"\"\"\n  diameter: Distance\n  \"\"\"\"\"\"\n  dry_mass_kg: Int\n  \"\"\"\"\"\"\n  dry_mass_lb: Int\n  \"\"\"\"\"\"\n  first_flight: String\n  \"\"\"\"\"\"\n  heat_shield: DragonHeatShield\n  \"\"\"\"\"\"\n  height_w_trunk: Distance\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  launch_payload_mass: Mass\n  \"\"\"\"\"\"\n  launch_payload_vol: Volume\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  orbit_duration_yr: Int\n  \"\"\"\"\"\"\n  pressurized_capsule: DragonPressurizedCapsule\n  \"\"\"\"\"\"\n  return_payload_mass: Mass\n  \"\"\"\"\"\"\n  return_payload_vol: Volume\n  \"\"\"\"\"\"\n  sidewall_angle_deg: Float\n  \"\"\"\"\"\"\n  thrusters: [DragonThrust]\n  \"\"\"\"\"\"\n  trunk: DragonTrunk\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype DragonHeatShield {\n  \"\"\"\"\"\"\n  dev_partner: String\n  \"\"\"\"\"\"\n  material: String\n  \"\"\"\"\"\"\n  size_meters: Float\n  \"\"\"\"\"\"\n  temp_degrees: Int\n}\n\n\"\"\"\"\"\"\ntype DragonPressurizedCapsule {\n  \"\"\"\"\"\"\n  payload_volume: Volume\n}\n\n\"\"\"\"\"\"\ntype DragonThrust {\n  \"\"\"\"\"\"\n  amount: Int\n  \"\"\"\"\"\"\n  fuel_1: String\n  \"\"\"\"\"\"\n  fuel_2: String\n  \"\"\"\"\"\"\n  pods: Int\n  \"\"\"\"\"\"\n  thrust: Force\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype DragonTrunk {\n  \"\"\"\"\"\"\n  cargo: DragonTrunkCargo\n  \"\"\"\"\"\"\n  trunk_volume: Volume\n}\n\n\"\"\"\"\"\"\ntype DragonTrunkCargo {\n  \"\"\"\"\"\"\n  solar_array: Int\n  \"\"\"\"\"\"\n  unpressurized_cargo: Boolean\n}\n\n\"\"\"\"\"\"\ntype Force {\n  \"\"\"\"\"\"\n  kN: Float\n  \"\"\"\"\"\"\n  lbf: Float\n}\n\n\"\"\"\"\"\"\ntype HistoriesResult {\n  \"\"\"\"\"\"\n  data: [History]\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ntype History {\n  \"\"\"\"\"\"\n  details: String\n  \"\"\"\"\"\"\n  event_date_unix: Date\n  \"\"\"\"\"\"\n  event_date_utc: Date\n  \"\"\"\"\"\"\n  flight: Launch\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  links: Link\n  \"\"\"\"\"\"\n  title: String\n}\n\n\"\"\"\"\"\"\ninput HistoryFind {\n  \"\"\"\"\"\"\n  end: Date\n  \"\"\"\"\"\"\n  flight_number: Int\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  start: Date\n}\n\n\"\"\"\"\"\"\ntype Info {\n  \"\"\"\"\"\"\n  ceo: String\n  \"\"\"\"\"\"\n  coo: String\n  \"\"\"\"\"\"\n  cto: String\n  \"\"\"\"\"\"\n  cto_propulsion: String\n  \"\"\"\"\"\"\n  employees: Int\n  \"\"\"\"\"\"\n  founded: Int\n  \"\"\"\"\"\"\n  founder: String\n  \"\"\"\"\"\"\n  headquarters: Address\n  \"\"\"\"\"\"\n  launch_sites: Int\n  \"\"\"\"\"\"\n  links: InfoLinks\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  summary: String\n  \"\"\"\"\"\"\n  test_sites: Int\n  \"\"\"\"\"\"\n  valuation: Float\n  \"\"\"\"\"\"\n  vehicles: Int\n}\n\n\"\"\"\"\"\"\ntype InfoLinks {\n  \"\"\"\"\"\"\n  elon_twitter: String\n  \"\"\"\"\"\"\n  flickr: String\n  \"\"\"\"\"\"\n  twitter: String\n  \"\"\"\"\"\"\n  website: String\n}\n\n\"\"\"\"\"\"\ntype Landpad {\n  \"\"\"\"\"\"\n  attempted_landings: String\n  \"\"\"\"\"\"\n  details: String\n  \"\"\"\"\"\"\n  full_name: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  landing_type: String\n  \"\"\"\"\"\"\n  location: Location\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  successful_landings: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Launch {\n  \"\"\"\"\"\"\n  details: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  is_tentative: Boolean\n  \"\"\"\"\"\"\n  launch_date_local: Date\n  \"\"\"\"\"\"\n  launch_date_unix: Date\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n  \"\"\"\"\"\"\n  launch_site: LaunchSite\n  \"\"\"\"\"\"\n  launch_success: Boolean\n  \"\"\"\"\"\"\n  launch_year: String\n  \"\"\"\"\"\"\n  links: LaunchLinks\n  \"\"\"\"\"\"\n  mission_id: [String]\n  \"\"\"\"\"\"\n  mission_name: String\n  \"\"\"\"\"\"\n  rocket: LaunchRocket\n  \"\"\"\"\"\"\n  ships: [Ship]\n  \"\"\"\"\"\"\n  static_fire_date_unix: Date\n  \"\"\"\"\"\"\n  static_fire_date_utc: Date\n  \"\"\"\"\"\"\n  telemetry: LaunchTelemetry\n  \"\"\"\"\"\"\n  tentative_max_precision: String\n  \"\"\"\"\"\"\n  upcoming: Boolean\n}\n\n\"\"\"\"\"\"\ninput LaunchFind {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n  \"\"\"\"\"\"\n  block: Int\n  \"\"\"\"\"\"\n  cap_serial: String\n  \"\"\"\"\"\"\n  capsule_reuse: String\n  \"\"\"\"\"\"\n  core_flight: Int\n  \"\"\"\"\"\"\n  core_reuse: String\n  \"\"\"\"\"\"\n  core_serial: String\n  \"\"\"\"\"\"\n  customer: String\n  \"\"\"\"\"\"\n  eccentricity: Float\n  \"\"\"\"\"\"\n  end: Date\n  \"\"\"\"\"\"\n  epoch: Date\n  \"\"\"\"\"\"\n  fairings_recovered: String\n  \"\"\"\"\"\"\n  fairings_recovery_attempt: String\n  \"\"\"\"\"\"\n  fairings_reuse: String\n  \"\"\"\"\"\"\n  fairings_reused: String\n  \"\"\"\"\"\"\n  fairings_ship: String\n  \"\"\"\"\"\"\n  gridfins: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  inclination_deg: Float\n  \"\"\"\"\"\"\n  land_success: String\n  \"\"\"\"\"\"\n  landing_intent: String\n  \"\"\"\"\"\"\n  landing_type: String\n  \"\"\"\"\"\"\n  landing_vehicle: String\n  \"\"\"\"\"\"\n  launch_date_local: Date\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n  \"\"\"\"\"\"\n  launch_success: String\n  \"\"\"\"\"\"\n  launch_year: String\n  \"\"\"\"\"\"\n  legs: String\n  \"\"\"\"\"\"\n  lifespan_years: Float\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  manufacturer: String\n  \"\"\"\"\"\"\n  mean_motion: Float\n  \"\"\"\"\"\"\n  mission_id: String\n  \"\"\"\"\"\"\n  mission_name: String\n  \"\"\"\"\"\"\n  nationality: String\n  \"\"\"\"\"\"\n  norad_id: Int\n  \"\"\"\"\"\"\n  orbit: String\n  \"\"\"\"\"\"\n  payload_id: String\n  \"\"\"\"\"\"\n  payload_type: String\n  \"\"\"\"\"\"\n  periapsis_km: Float\n  \"\"\"\"\"\"\n  period_min: Float\n  \"\"\"\"\"\"\n  raan: Float\n  \"\"\"\"\"\"\n  reference_system: String\n  \"\"\"\"\"\"\n  regime: String\n  \"\"\"\"\"\"\n  reused: String\n  \"\"\"\"\"\"\n  rocket_id: String\n  \"\"\"\"\"\"\n  rocket_name: String\n  \"\"\"\"\"\"\n  rocket_type: String\n  \"\"\"\"\"\"\n  second_stage_block: String\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n  \"\"\"\"\"\"\n  ship: String\n  \"\"\"\"\"\"\n  side_core1_reuse: String\n  \"\"\"\"\"\"\n  side_core2_reuse: String\n  \"\"\"\"\"\"\n  site_id: String\n  \"\"\"\"\"\"\n  site_name: String\n  \"\"\"\"\"\"\n  site_name_long: String\n  \"\"\"\"\"\"\n  start: Date\n  \"\"\"\"\"\"\n  tbd: String\n  \"\"\"\"\"\"\n  tentative: String\n  \"\"\"\"\"\"\n  tentative_max_precision: String\n}\n\n\"\"\"\"\"\"\ntype LaunchLinks {\n  \"\"\"\"\"\"\n  article_link: String\n  \"\"\"\"\"\"\n  flickr_images: [String]\n  \"\"\"\"\"\"\n  mission_patch: String\n  \"\"\"\"\"\"\n  mission_patch_small: String\n  \"\"\"\"\"\"\n  presskit: String\n  \"\"\"\"\"\"\n  reddit_campaign: String\n  \"\"\"\"\"\"\n  reddit_launch: String\n  \"\"\"\"\"\"\n  reddit_media: String\n  \"\"\"\"\"\"\n  reddit_recovery: String\n  \"\"\"\"\"\"\n  video_link: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype LaunchRocket {\n  \"\"\"\"\"\"\n  fairings: LaunchRocketFairings\n  \"\"\"\"\"\"\n  first_stage: LaunchRocketFirstStage\n  \"\"\"\"\"\"\n  rocket: Rocket\n  \"\"\"\"\"\"\n  rocket_name: String\n  \"\"\"\"\"\"\n  rocket_type: String\n  \"\"\"\"\"\"\n  second_stage: LaunchRocketSecondStage\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFairings {\n  \"\"\"\"\"\"\n  recovered: Boolean\n  \"\"\"\"\"\"\n  recovery_attempt: Boolean\n  \"\"\"\"\"\"\n  reused: Boolean\n  \"\"\"\"\"\"\n  ship: String\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFirstStage {\n  \"\"\"\"\"\"\n  cores: [LaunchRocketFirstStageCore]\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFirstStageCore {\n  \"\"\"\"\"\"\n  block: Int\n  \"\"\"\"\"\"\n  core: Core\n  \"\"\"\"\"\"\n  flight: Int\n  \"\"\"\"\"\"\n  gridfins: Boolean\n  \"\"\"\"\"\"\n  land_success: Boolean\n  \"\"\"\"\"\"\n  landing_intent: Boolean\n  \"\"\"\"\"\"\n  landing_type: String\n  \"\"\"\"\"\"\n  landing_vehicle: String\n  \"\"\"\"\"\"\n  legs: Boolean\n  \"\"\"\"\"\"\n  reused: Boolean\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketSecondStage {\n  \"\"\"\"\"\"\n  block: Int\n  \"\"\"\"\"\"\n  payloads: [Payload]\n}\n\n\"\"\"\"\"\"\ntype LaunchSite {\n  \"\"\"\"\"\"\n  site_id: String\n  \"\"\"\"\"\"\n  site_name: String\n  \"\"\"\"\"\"\n  site_name_long: String\n}\n\n\"\"\"\"\"\"\ntype LaunchTelemetry {\n  \"\"\"\"\"\"\n  flight_club: String\n}\n\n\"\"\"\"\"\"\ntype LaunchesPastResult {\n  \"\"\"\"\"\"\n  data: [Launch]\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ntype Launchpad {\n  \"\"\"\"\"\"\n  attempted_launches: Int\n  \"\"\"\"\"\"\n  details: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  location: Location\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  successful_launches: Int\n  \"\"\"\"\"\"\n  vehicles_launched: [Rocket]\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Link {\n  \"\"\"\"\"\"\n  article: String\n  \"\"\"\"\"\"\n  reddit: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Location {\n  \"\"\"\"\"\"\n  latitude: Float\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  region: String\n}\n\n\"\"\"\"\"\"\ntype Mass {\n  \"\"\"\"\"\"\n  kg: Int\n  \"\"\"\"\"\"\n  lb: Int\n}\n\n\"\"\"\"\"\"\ntype Mission {\n  \"\"\"\"\"\"\n  description: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  manufacturers: [String]\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  payloads: [Payload]\n  \"\"\"\"\"\"\n  twitter: String\n  \"\"\"\"\"\"\n  website: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype MissionResult {\n  \"\"\"\"\"\"\n  data: [Mission]\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ninput MissionsFind {\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  manufacturer: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  payload_id: String\n}\n\ntype Mutation {\n  \"\"\"\n  delete data from the table: \"users\"\n  \"\"\"\n  delete_users(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: users_bool_exp!\n  ): users_mutation_response\n  \"\"\"\n  insert data into the table: \"users\"\n  \"\"\"\n  insert_users(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [users_insert_input!]!\n    \"\"\"on conflict condition\"\"\"\n    on_conflict: users_on_conflict\n  ): users_mutation_response\n  \"\"\"\n  update data of the table: \"users\"\n  \"\"\"\n  update_users(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: users_set_input\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: users_bool_exp!\n  ): users_mutation_response\n}\n\n\"\"\"\"\"\"\nscalar ObjectID\n\n\"\"\"\"\"\"\ntype Payload {\n  \"\"\"\"\"\"\n  customers: [String]\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  manufacturer: String\n  \"\"\"\"\"\"\n  nationality: String\n  \"\"\"\"\"\"\n  norad_id: [Int]\n  \"\"\"\"\"\"\n  orbit: String\n  \"\"\"\"\"\"\n  orbit_params: PayloadOrbitParams\n  \"\"\"\"\"\"\n  payload_mass_kg: Float\n  \"\"\"\"\"\"\n  payload_mass_lbs: Float\n  \"\"\"\"\"\"\n  payload_type: String\n  \"\"\"\"\"\"\n  reused: Boolean\n}\n\n\"\"\"\"\"\"\ntype PayloadOrbitParams {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n  \"\"\"\"\"\"\n  arg_of_pericenter: Float\n  \"\"\"\"\"\"\n  eccentricity: Float\n  \"\"\"\"\"\"\n  epoch: Date\n  \"\"\"\"\"\"\n  inclination_deg: Float\n  \"\"\"\"\"\"\n  lifespan_years: Float\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  mean_anomaly: Float\n  \"\"\"\"\"\"\n  mean_motion: Float\n  \"\"\"\"\"\"\n  periapsis_km: Float\n  \"\"\"\"\"\"\n  period_min: Float\n  \"\"\"\"\"\"\n  raan: Float\n  \"\"\"\"\"\"\n  reference_system: String\n  \"\"\"\"\"\"\n  regime: String\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n}\n\n\"\"\"\"\"\"\ninput PayloadsFind {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n  \"\"\"\"\"\"\n  customer: String\n  \"\"\"\"\"\"\n  eccentricity: Float\n  \"\"\"\"\"\"\n  epoch: Date\n  \"\"\"\"\"\"\n  inclination_deg: Float\n  \"\"\"\"\"\"\n  lifespan_years: Float\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  manufacturer: String\n  \"\"\"\"\"\"\n  mean_motion: Float\n  \"\"\"\"\"\"\n  nationality: String\n  \"\"\"\"\"\"\n  norad_id: Int\n  \"\"\"\"\"\"\n  orbit: String\n  \"\"\"\"\"\"\n  payload_id: ID\n  \"\"\"\"\"\"\n  payload_type: String\n  \"\"\"\"\"\"\n  periapsis_km: Float\n  \"\"\"\"\"\"\n  period_min: Float\n  \"\"\"\"\"\"\n  raan: Float\n  \"\"\"\"\"\"\n  reference_system: String\n  \"\"\"\"\"\"\n  regime: String\n  \"\"\"\"\"\"\n  reused: Boolean\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n}\n\ntype Query {\n  \"\"\"\"\"\"\n  capsule(id: ID!): Capsule\n  \"\"\"\"\"\"\n  capsules(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  \"\"\"\"\"\"\n  capsulesPast(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  \"\"\"\"\"\"\n  capsulesUpcoming(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  \"\"\"\"\"\"\n  company: Info\n  \"\"\"\"\"\"\n  core(id: ID!): Core\n  \"\"\"\"\"\"\n  cores(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  \"\"\"\"\"\"\n  coresPast(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  \"\"\"\"\"\"\n  coresUpcoming(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  \"\"\"\"\"\"\n  dragon(id: ID!): Dragon\n  \"\"\"\"\"\"\n  dragons(limit: Int, offset: Int): [Dragon]\n  \"\"\"\"\"\"\n  histories(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): [History]\n  \"\"\"\"\"\"\n  historiesResult(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): HistoriesResult\n  \"\"\"\"\"\"\n  history(id: ID!): History\n  \"\"\"\"\"\"\n  landpad(id: ID!): Landpad\n  \"\"\"\"\"\"\n  landpads(limit: Int, offset: Int): [Landpad]\n  \"\"\"\"\"\"\n  launch(id: ID!): Launch\n  \"\"\"\"\"\"\n  launchLatest(offset: Int): Launch\n  \"\"\"\"\"\"\n  launchNext(offset: Int): Launch\n  \"\"\"\"\"\"\n  launches(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  \"\"\"\"\"\"\n  launchesPast(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  \"\"\"\"\"\"\n  launchesPastResult(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): LaunchesPastResult\n  \"\"\"\"\"\"\n  launchesUpcoming(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  \"\"\"\"\"\"\n  launchpad(id: ID!): Launchpad\n  \"\"\"\"\"\"\n  launchpads(limit: Int, offset: Int): [Launchpad]\n  \"\"\"\"\"\"\n  mission(id: ID!): Mission\n  \"\"\"\"\"\"\n  missions(find: MissionsFind, limit: Int, offset: Int): [Mission]\n  \"\"\"\"\"\"\n  missionsResult(find: MissionsFind, limit: Int, offset: Int): MissionResult\n  \"\"\"\"\"\"\n  payload(id: ID!): Payload\n  \"\"\"\"\"\"\n  payloads(find: PayloadsFind, limit: Int, offset: Int, order: String, sort: String): [Payload]\n  \"\"\"\"\"\"\n  roadster: Roadster\n  \"\"\"\"\"\"\n  rocket(id: ID!): Rocket\n  \"\"\"\"\"\"\n  rockets(limit: Int, offset: Int): [Rocket]\n  \"\"\"\"\"\"\n  rocketsResult(limit: Int, offset: Int): RocketsResult\n  \"\"\"\"\"\"\n  ship(id: ID!): Ship\n  \"\"\"\"\"\"\n  ships(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): [Ship]\n  \"\"\"\"\"\"\n  shipsResult(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): ShipsResult\n  \"\"\"\n  fetch data from the table: \"users\"\n  \"\"\"\n  users(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): [users!]!\n  \"\"\"\n  fetch aggregated fields from the table: \"users\"\n  \"\"\"\n  users_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): users_aggregate!\n  \"\"\"fetch data from the table: \"users\" using primary key columns\"\"\"\n  users_by_pk(id: uuid!): users\n}\n\n\"\"\"\"\"\"\ntype Result {\n  \"\"\"\"\"\"\n  totalCount: Int\n}\n\n\"\"\"\"\"\"\ntype Roadster {\n  \"\"\"\"\"\"\n  apoapsis_au: Float\n  \"\"\"\"\"\"\n  details: String\n  \"\"\"\"\"\"\n  earth_distance_km: Float\n  \"\"\"\"\"\"\n  earth_distance_mi: Float\n  \"\"\"\"\"\"\n  eccentricity: Float\n  \"\"\"\"\"\"\n  epoch_jd: Float\n  \"\"\"\"\"\"\n  inclination: Float\n  \"\"\"\"\"\"\n  launch_date_unix: Date\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n  \"\"\"\"\"\"\n  launch_mass_kg: Int\n  \"\"\"\"\"\"\n  launch_mass_lbs: Int\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  mars_distance_km: Float\n  \"\"\"\"\"\"\n  mars_distance_mi: Float\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  norad_id: Int\n  \"\"\"\"\"\"\n  orbit_type: Float\n  \"\"\"\"\"\"\n  periapsis_arg: Float\n  \"\"\"\"\"\"\n  periapsis_au: Float\n  \"\"\"\"\"\"\n  period_days: Float\n  \"\"\"\"\"\"\n  semi_major_axis_au: Float\n  \"\"\"\"\"\"\n  speed_kph: Float\n  \"\"\"\"\"\"\n  speed_mph: Float\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Rocket {\n  \"\"\"\"\"\"\n  active: Boolean\n  \"\"\"\"\"\"\n  boosters: Int\n  \"\"\"\"\"\"\n  company: String\n  \"\"\"\"\"\"\n  cost_per_launch: Int\n  \"\"\"\"\"\"\n  country: String\n  \"\"\"\"\"\"\n  description: String\n  \"\"\"\"\"\"\n  diameter: Distance\n  \"\"\"\"\"\"\n  engines: RocketEngines\n  \"\"\"\"\"\"\n  first_flight: Date\n  \"\"\"\"\"\"\n  first_stage: RocketFirstStage\n  \"\"\"\"\"\"\n  height: Distance\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  landing_legs: RocketLandingLegs\n  \"\"\"\"\"\"\n  mass: Mass\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  payload_weights: [RocketPayloadWeight]\n  \"\"\"\"\"\"\n  second_stage: RocketSecondStage\n  \"\"\"\"\"\"\n  stages: Int\n  \"\"\"\"\"\"\n  success_rate_pct: Int\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype RocketEngines {\n  \"\"\"\"\"\"\n  engine_loss_max: String\n  \"\"\"\"\"\"\n  layout: String\n  \"\"\"\"\"\"\n  number: Int\n  \"\"\"\"\"\"\n  propellant_1: String\n  \"\"\"\"\"\"\n  propellant_2: String\n  \"\"\"\"\"\"\n  thrust_sea_level: Force\n  \"\"\"\"\"\"\n  thrust_to_weight: Float\n  \"\"\"\"\"\"\n  thrust_vacuum: Force\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  version: String\n}\n\n\"\"\"\"\"\"\ntype RocketFirstStage {\n  \"\"\"\"\"\"\n  burn_time_sec: Int\n  \"\"\"\"\"\"\n  engines: Int\n  \"\"\"\"\"\"\n  fuel_amount_tons: Float\n  \"\"\"\"\"\"\n  reusable: Boolean\n  \"\"\"\"\"\"\n  thrust_sea_level: Force\n  \"\"\"\"\"\"\n  thrust_vacuum: Force\n}\n\n\"\"\"\"\"\"\ntype RocketLandingLegs {\n  \"\"\"\"\"\"\n  material: String\n  \"\"\"\"\"\"\n  number: Int\n}\n\n\"\"\"\"\"\"\ntype RocketPayloadWeight {\n  \"\"\"\"\"\"\n  id: String\n  \"\"\"\"\"\"\n  kg: Int\n  \"\"\"\"\"\"\n  lb: Int\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStage {\n  \"\"\"\"\"\"\n  burn_time_sec: Int\n  \"\"\"\"\"\"\n  engines: Int\n  \"\"\"\"\"\"\n  fuel_amount_tons: Float\n  \"\"\"\"\"\"\n  payloads: RocketSecondStagePayloads\n  \"\"\"\"\"\"\n  thrust: Force\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStagePayloadCompositeFairing {\n  \"\"\"\"\"\"\n  diameter: Distance\n  \"\"\"\"\"\"\n  height: Distance\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStagePayloads {\n  \"\"\"\"\"\"\n  composite_fairing: RocketSecondStagePayloadCompositeFairing\n  \"\"\"\"\"\"\n  option_1: String\n}\n\n\"\"\"\"\"\"\ntype RocketsResult {\n  \"\"\"\"\"\"\n  data: [Rocket]\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\"\"\"\ntype Ship {\n  \"\"\"\"\"\"\n  abs: Int\n  \"\"\"\"\"\"\n  active: Boolean\n  \"\"\"\"\"\"\n  attempted_landings: Int\n  \"\"\"\"\"\"\n  class: Int\n  \"\"\"\"\"\"\n  course_deg: Int\n  \"\"\"\"\"\"\n  home_port: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  image: String\n  \"\"\"\"\"\"\n  imo: Int\n  \"\"\"\"\"\"\n  missions: [ShipMission]\n  \"\"\"\"\"\"\n  mmsi: Int\n  \"\"\"\"\"\"\n  model: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  position: ShipLocation\n  \"\"\"\"\"\"\n  roles: [String]\n  \"\"\"\"\"\"\n  speed_kn: Float\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  successful_landings: Int\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  url: String\n  \"\"\"\"\"\"\n  weight_kg: Int\n  \"\"\"\"\"\"\n  weight_lbs: Int\n  \"\"\"\"\"\"\n  year_built: Int\n}\n\n\"\"\"\"\"\"\ntype ShipLocation {\n  \"\"\"\"\"\"\n  latitude: Float\n  \"\"\"\"\"\"\n  longitude: Float\n}\n\n\"\"\"\"\"\"\ntype ShipMission {\n  \"\"\"\"\"\"\n  flight: String\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ninput ShipsFind {\n  \"\"\"\"\"\"\n  abs: Int\n  \"\"\"\"\"\"\n  active: Boolean\n  \"\"\"\"\"\"\n  attempted_landings: Int\n  \"\"\"\"\"\"\n  class: Int\n  \"\"\"\"\"\"\n  course_deg: Int\n  \"\"\"\"\"\"\n  home_port: String\n  \"\"\"\"\"\"\n  id: ID\n  \"\"\"\"\"\"\n  imo: Int\n  \"\"\"\"\"\"\n  latitude: Float\n  \"\"\"\"\"\"\n  longitude: Float\n  \"\"\"\"\"\"\n  mission: String\n  \"\"\"\"\"\"\n  mmsi: Int\n  \"\"\"\"\"\"\n  model: String\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  role: String\n  \"\"\"\"\"\"\n  speed_kn: Int\n  \"\"\"\"\"\"\n  status: String\n  \"\"\"\"\"\"\n  successful_landings: Int\n  \"\"\"\"\"\"\n  type: String\n  \"\"\"\"\"\"\n  weight_kg: Int\n  \"\"\"\"\"\"\n  weight_lbs: Int\n  \"\"\"\"\"\"\n  year_built: Int\n}\n\n\"\"\"\"\"\"\ntype ShipsResult {\n  \"\"\"\"\"\"\n  data: [Ship]\n  \"\"\"\"\"\"\n  result: Result\n}\n\n\"\"\"\nexpression to compare columns of type String. All fields are combined with logical 'AND'.\n\"\"\"\ninput String_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: String\n  \"\"\"\"\"\"\n  _gt: String\n  \"\"\"\"\"\"\n  _gte: String\n  \"\"\"\"\"\"\n  _ilike: String\n  \"\"\"\"\"\"\n  _in: [String!]\n  \"\"\"\"\"\"\n  _is_null: Boolean\n  \"\"\"\"\"\"\n  _like: String\n  \"\"\"\"\"\"\n  _lt: String\n  \"\"\"\"\"\"\n  _lte: String\n  \"\"\"\"\"\"\n  _neq: String\n  \"\"\"\"\"\"\n  _nilike: String\n  \"\"\"\"\"\"\n  _nin: [String!]\n  \"\"\"\"\"\"\n  _nlike: String\n  \"\"\"\"\"\"\n  _nsimilar: String\n  \"\"\"\"\"\"\n  _similar: String\n}\n\ntype Subscription {\n  \"\"\"\n  fetch data from the table: \"users\"\n  \"\"\"\n  users(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): [users!]!\n  \"\"\"\n  fetch aggregated fields from the table: \"users\"\n  \"\"\"\n  users_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): users_aggregate!\n  \"\"\"fetch data from the table: \"users\" using primary key columns\"\"\"\n  users_by_pk(id: uuid!): users\n}\n\n\"\"\"\"\"\"\ntype Volume {\n  \"\"\"\"\"\"\n  cubic_feet: Int\n  \"\"\"\"\"\"\n  cubic_meters: Int\n}\n\n\"\"\"conflict action\"\"\"\nenum conflict_action {\n  \"\"\"ignore the insert on this row\"\"\"\n  ignore\n  \"\"\"update the row with the given values\"\"\"\n  update\n}\n\nscalar openfed__FieldSet\n\n\"\"\"column ordering options\"\"\"\nenum order_by {\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc\n  \"\"\"in the ascending order, nulls first\"\"\"\n  asc_nulls_first\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc_nulls_last\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc_nulls_first\n  \"\"\"in the descending order, nulls last\"\"\"\n  desc_nulls_last\n}\n\nscalar timestamptz\n\n\"\"\"\nexpression to compare columns of type timestamptz. All fields are combined with logical 'AND'.\n\"\"\"\ninput timestamptz_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: timestamptz\n  \"\"\"\"\"\"\n  _gt: timestamptz\n  \"\"\"\"\"\"\n  _gte: timestamptz\n  \"\"\"\"\"\"\n  _in: [timestamptz!]\n  \"\"\"\"\"\"\n  _is_null: Boolean\n  \"\"\"\"\"\"\n  _lt: timestamptz\n  \"\"\"\"\"\"\n  _lte: timestamptz\n  \"\"\"\"\"\"\n  _neq: timestamptz\n  \"\"\"\"\"\"\n  _nin: [timestamptz!]\n}\n\n\"\"\"\ncolumns and relationships of \"users\"\n\"\"\"\ntype users {\n  \"\"\"\"\"\"\n  id: uuid!\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  rocket: String\n  \"\"\"\"\"\"\n  timestamp: timestamptz!\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\naggregated selection of \"users\"\n\"\"\"\ntype users_aggregate {\n  \"\"\"\"\"\"\n  aggregate: users_aggregate_fields\n  \"\"\"\"\"\"\n  nodes: [users!]!\n}\n\n\"\"\"\naggregate fields of \"users\"\n\"\"\"\ntype users_aggregate_fields {\n  \"\"\"\"\"\"\n  count(columns: [users_select_column!], distinct: Boolean): Int\n  \"\"\"\"\"\"\n  max: users_max_fields\n  \"\"\"\"\"\"\n  min: users_min_fields\n}\n\n\"\"\"\norder by aggregate values of table \"users\"\n\"\"\"\ninput users_aggregate_order_by {\n  \"\"\"\"\"\"\n  count: order_by\n  \"\"\"\"\"\"\n  max: users_max_order_by\n  \"\"\"\"\"\"\n  min: users_min_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"users\"\n\"\"\"\ninput users_arr_rel_insert_input {\n  \"\"\"\"\"\"\n  data: [users_insert_input!]!\n  \"\"\"\"\"\"\n  on_conflict: users_on_conflict\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"users\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput users_bool_exp {\n  \"\"\"\"\"\"\n  _and: [users_bool_exp]\n  \"\"\"\"\"\"\n  _not: users_bool_exp\n  \"\"\"\"\"\"\n  _or: [users_bool_exp]\n  \"\"\"\"\"\"\n  id: uuid_comparison_exp\n  \"\"\"\"\"\"\n  name: String_comparison_exp\n  \"\"\"\"\"\"\n  rocket: String_comparison_exp\n  \"\"\"\"\"\"\n  timestamp: timestamptz_comparison_exp\n  \"\"\"\"\"\"\n  twitter: String_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"users\"\n\"\"\"\nenum users_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  users_pkey\n}\n\n\"\"\"\ninput type for inserting data into table \"users\"\n\"\"\"\ninput users_insert_input {\n  \"\"\"\"\"\"\n  id: uuid\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  rocket: String\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype users_max_fields {\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  rocket: String\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\norder by max() on columns of table \"users\"\n\"\"\"\ninput users_max_order_by {\n  \"\"\"\"\"\"\n  name: order_by\n  \"\"\"\"\"\"\n  rocket: order_by\n  \"\"\"\"\"\"\n  timestamp: order_by\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype users_min_fields {\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  rocket: String\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\norder by min() on columns of table \"users\"\n\"\"\"\ninput users_min_order_by {\n  \"\"\"\"\"\"\n  name: order_by\n  \"\"\"\"\"\"\n  rocket: order_by\n  \"\"\"\"\"\"\n  timestamp: order_by\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"users\"\n\"\"\"\ntype users_mutation_response {\n  \"\"\"number of affected rows by the mutation\"\"\"\n  affected_rows: Int!\n  \"\"\"data of the affected rows by the mutation\"\"\"\n  returning: [users!]!\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"users\"\n\"\"\"\ninput users_obj_rel_insert_input {\n  \"\"\"\"\"\"\n  data: users_insert_input!\n  \"\"\"\"\"\"\n  on_conflict: users_on_conflict\n}\n\n\"\"\"\non conflict condition type for table \"users\"\n\"\"\"\ninput users_on_conflict {\n  \"\"\"\"\"\"\n  constraint: users_constraint!\n  \"\"\"\"\"\"\n  update_columns: [users_update_column!]!\n}\n\n\"\"\"\nordering options when selecting data from \"users\"\n\"\"\"\ninput users_order_by {\n  \"\"\"\"\"\"\n  id: order_by\n  \"\"\"\"\"\"\n  name: order_by\n  \"\"\"\"\"\"\n  rocket: order_by\n  \"\"\"\"\"\"\n  timestamp: order_by\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"\nselect columns of table \"users\"\n\"\"\"\nenum users_select_column {\n  \"\"\"column name\"\"\"\n  id\n  \"\"\"column name\"\"\"\n  name\n  \"\"\"column name\"\"\"\n  rocket\n  \"\"\"column name\"\"\"\n  timestamp\n  \"\"\"column name\"\"\"\n  twitter\n}\n\n\"\"\"\ninput type for updating data in table \"users\"\n\"\"\"\ninput users_set_input {\n  \"\"\"\"\"\"\n  id: uuid\n  \"\"\"\"\"\"\n  name: String\n  \"\"\"\"\"\"\n  rocket: String\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\nupdate columns of table \"users\"\n\"\"\"\nenum users_update_column {\n  \"\"\"column name\"\"\"\n  id\n  \"\"\"column name\"\"\"\n  name\n  \"\"\"column name\"\"\"\n  rocket\n  \"\"\"column name\"\"\"\n  timestamp\n  \"\"\"column name\"\"\"\n  twitter\n}\n\nscalar uuid\n\n\"\"\"\nexpression to compare columns of type uuid. All fields are combined with logical 'AND'.\n\"\"\"\ninput uuid_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: uuid\n  \"\"\"\"\"\"\n  _gt: uuid\n  \"\"\"\"\"\"\n  _gte: uuid\n  \"\"\"\"\"\"\n  _in: [uuid!]\n  \"\"\"\"\"\"\n  _is_null: Boolean\n  \"\"\"\"\"\"\n  _lt: uuid\n  \"\"\"\"\"\"\n  _lte: uuid\n  \"\"\"\"\"\"\n  _neq: uuid\n  \"\"\"\"\"\"\n  _nin: [uuid!]\n}"
                    }
                },
                "version": "cc6c7086-adcc-49fc-acab-9be2dbb20012",
                "subgraphs": [
                    {
                        "id": "51d9ede2-3af9-4797-bac7-c8d6bd51581d",
                        "name": "spacexfeat",
                        "routingUrl": "https://spacex-production.up.railway.app"
                    }
                ]
            }
        }
    },
    "compatibilityVersion": "1:{{$COMPOSITION__VERSION}}"
}