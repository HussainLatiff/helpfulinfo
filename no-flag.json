{
    "engineConfig": {
        "defaultFlushInterval": "500",
        "datasourceConfigurations": [
            {
                "kind": "GRAPHQL",
                "rootNodes": [
                    {
                        "typeName": "Query",
                        "fieldNames": [
                            "FederateBase"
                        ]
                    }
                ],
                "childNodes": [
                    {
                        "typeName": "FederateBaseResponse",
                        "fieldNames": [
                            "id"
                        ]
                    }
                ],
                "overrideFieldPathFromAlias": true,
                "customGraphql": {
                    "fetch": {
                        "url": {
                            "staticVariableContent": "http://localhost:3002/graphql"
                        },
                        "method": "POST",
                        "body": {},
                        "baseUrl": {},
                        "path": {}
                    },
                    "subscription": {
                        "enabled": true,
                        "url": {
                            "staticVariableContent": "http://localhost:3002/graphql"
                        },
                        "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
                        "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
                    },
                    "federation": {
                        "enabled": true,
                        "serviceSdl": "\nschema {\n  query: Query\n}\n\n# Root Query type\ntype Query {\n  FederateBase: FederateBaseResponse!\n}\n\n# Type for the response that contains only an ID\ntype FederateBaseResponse {\n  id: ID!\n}\n"
                    },
                    "upstreamSchema": {
                        "key": "9cabd78fd86a5da0cd7db5493e98fdaa16a277ae"
                    }
                },
                "requestTimeoutSeconds": "10",
                "id": "0413bfee-ffd6-4d53-a23a-344109cbb11a"
            }
        ],
        "graphqlSchema": "schema {\n  query: Query\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype FederateBaseResponse {\n  id: ID!\n}\n\ntype Query {\n  FederateBase: FederateBaseResponse!\n}\n\nscalar openfed__FieldSet",

        "stringStorage": {
            "9cabd78fd86a5da0cd7db5493e98fdaa16a277ae": "schema {\n  query: Query\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype FederateBaseResponse {\n  id: ID!\n}\n\ntype Query {\n  FederateBase: FederateBaseResponse!\n}\n\nscalar openfed__FieldSet"
        }
    },
    "version": "b5de725b-9def-4ea4-9f17-e845448c895d",
    "subgraphs": [
        {
            "id": "0413bfee-ffd6-4d53-a23a-344109cbb11a",
            "name": "base1",
            "routingUrl": "http://localhost:3002/graphql"
        }
    ],
    "featureFlagConfigs": {
        "configByFeatureFlagName": {
        }
    },
    "compatibilityVersion": "1:{{$COMPOSITION__VERSION}}"
}